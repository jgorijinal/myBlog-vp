import{_ as p,r as t,o as e,c as o,a as n,e as c,F as l,d as s,b as r}from"./app.fcb85f29.js";var u="/myBlog-vp/assets/xxjg1.accf1b7f.png",i="/myBlog-vp/assets/sz01.0ea1688d.png",k="/myBlog-vp/assets/zhanjiegou1.f3ac4a48.png",b="/myBlog-vp/assets/zhanmian1.a6c87df1.png",m="/myBlog-vp/assets/35.9d61be8c.png",d="/myBlog-vp/assets/kuohao1.6026a83b.png",g="/myBlog-vp/assets/duilie1.92f7b681.png",y="/myBlog-vp/assets/duilie2.4b5f9f9c.png",w="/myBlog-vp/assets/yuese1.a9099882.png",h="/myBlog-vp/assets/lianbiao1.cdb3ff7f.png",f="/myBlog-vp/assets/lianbaofang1.e54b6502.png",v="/myBlog-vp/assets/cccc1.d33cb3bd.png",x="/myBlog-vp/assets/chatou1.d7c88bcd.png",L="/myBlog-vp/assets/insert1.ca3b3f7a.png",T="/myBlog-vp/assets/shanchu11.29552303.png",N="/myBlog-vp/assets/lianmian1.426da581.png",_="/myBlog-vp/assets/lianmian2.a5d2b8e4.png",z="/myBlog-vp/assets/fanlian1.0c090474.png",q="/myBlog-vp/assets/lianmian3.40c41996.png";const j={},B=s(`<h1 id="\u6808-\u961F\u5217-\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u6808-\u961F\u5217-\u94FE\u8868" aria-hidden="true">#</a> \u6808, \u961F\u5217, \u94FE\u8868</h1><h2 id="\u8865\u4E0B\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#\u8865\u4E0B\u57FA\u7840" aria-hidden="true">#</a> \u8865\u4E0B\u57FA\u7840</h2><h4 id="\u548C-\u7684\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u548C-\u7684\u4F4D\u7F6E" aria-hidden="true">#</a> ++ \u548C -- \u7684\u4F4D\u7F6E</h4><p><strong>\u8FD0\u7B97\u7B26 ++ \u548C -- \u53EF\u4EE5\u7F6E\u4E8E\u53D8\u91CF\u524D\uFF0C\u4E5F\u53EF\u4EE5\u7F6E\u4E8E\u53D8\u91CF\u540E</strong></p><ul><li>\u5F53\u8FD0\u7B97\u7B26\u7F6E\u4E8E\u53D8\u91CF\u540E\uFF0C\u88AB\u79F0\u4E3A\u201C\u540E\u7F6E\u5F62\u5F0F\u201D\uFF08postfix form\uFF09\uFF1Acounter++\u3002</li><li>\u5F53\u8FD0\u7B97\u7B26\u7F6E\u4E8E\u53D8\u91CF\u524D\uFF0C\u88AB\u79F0\u4E3A\u201C\u524D\u7F6E\u5F62\u5F0F\u201D\uFF08prefix form\uFF09\uFF1A++counter\u3002</li><li>\u4E24\u8005\u90FD\u505A\u540C\u4E00\u4EF6\u4E8B\uFF1A\u5C06\u53D8\u91CF counter \u4E0E 1 \u76F8\u52A0\u3002</li></ul><hr><p><strong>\u4ED6\u4EEC\u6709\u4EC0\u4E48\u533A\u522B\u5417\uFF1F</strong></p><ul><li>\u6709\uFF0C\u4F46\u53EA\u6709\u5F53\u6211\u4EEC\u4F7F\u7528 ++/-- \u7684\u8FD4\u56DE\u503C\u65F6\u624D\u80FD\u770B\u5230\u533A\u522B\uFF1B</li><li>\u5982\u679C\u81EA\u589E/\u81EA\u51CF\u7684\u503C\u4E0D\u4F1A\u88AB\u4F7F\u7528\uFF0C\u90A3\u4E48\u4E24\u8005\u5F62\u5F0F\u6CA1\u6709\u533A\u522B\uFF1B</li><li>\u5982\u679C\u60F3\u8981\u5BF9\u53D8\u91CF\u8FDB\u884C\u81EA\u589E\u64CD\u4F5C\uFF0C\u5E76\u4E14 \u9700\u8981\u7ACB\u523B\u4F7F\u7528\u81EA\u589E\u540E\u7684\u503C\uFF0C\u90A3\u4E48\u6211\u4EEC\u9700\u8981\u4F7F\u7528\u524D\u7F6E\u5F62\u5F0F</li><li>\u524D\u7F6E\u5F62\u5F0F\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u503C\uFF0C\u4F46\u540E\u7F6E\u8FD4\u56DE\u539F\u6765\u7684\u503C\uFF1B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> current <span class="token operator">=</span> <span class="token number">5</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">100</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result <span class="token operator">+</span>  current<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token comment">// 105</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> current <span class="token operator">=</span> <span class="token number">5</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">100</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result <span class="token operator">+</span>  <span class="token operator">++</span>current<span class="token punctuation">)</span>  <span class="token comment">// 106</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u5FAA\u73AF" aria-hidden="true">#</a> \u5FAA\u73AF</h4><p><strong>while\u5FAA\u73AF\u7684\u8BED\u6CD5</strong></p><ul><li>\u5F53<strong>\u6761\u4EF6\u6210\u7ACB\u65F6</strong>, <strong>\u6267\u884C\u4EE3\u7801\u5757</strong></li><li>\u5F53<strong>\u6761\u4EF6\u4E0D\u6210\u7ACB\u65F6</strong>, <strong>\u8DF3\u51FA\u4EE3\u7801\u5757</strong></li></ul><p><strong>while\u5FAA\u73AF\u7684\u7EC3\u4E60</strong></p><ul><li>\u7EC3\u4E60\u4E00\uFF1A\u6253\u53701 0 \u6B21Hello World</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span> <span class="token punctuation">,</span> count<span class="token punctuation">)</span>
  count<span class="token operator">++</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u7EC3\u4E60\u4E8C\uFF1A\u6253\u53700~99\u7684\u6570\u5B57</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
  i<span class="token operator">++</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u7EC3\u4E60\u4E09\uFF1A\u8BA1\u7B970~99\u7684\u6570\u5B57\u548C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> total <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  total <span class="token operator">+=</span> i
  i<span class="token operator">++</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>\u7EC3\u4E60\u56DB\uFF1A\u8BA1\u7B970~99\u6240\u6709\u5947\u6570\u7684\u548C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> total <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span><span class="token punctuation">(</span>count <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    total <span class="token operator">+=</span> count
  <span class="token punctuation">}</span>
  count<span class="token operator">++</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="\u7EBF\u6027\u7ED3\u6784-\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u6027\u7ED3\u6784-\u6570\u7EC4" aria-hidden="true">#</a> \u7EBF\u6027\u7ED3\u6784 - \u6570\u7EC4</h2><h3 id="\u7EBF\u6027\u7ED3\u6784-linear-list" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u6027\u7ED3\u6784-linear-list" aria-hidden="true">#</a> \u7EBF\u6027\u7ED3\u6784 (linear list)</h3><p>\u7EBF\u6027\u7ED3\u6784: \u662F\u7531 <code>n(n &gt;= 0)</code>\u4E2A\u6570\u636E\u5143\u7D20(\u7ED3\u70B9) <code>a[0], a[1], a[2],... a[n-1]</code> \u7EC4\u6210\u7684\u6709\u9650\u5E8F\u5217</p><ul><li>\u6570\u636E\u5143\u7D20\u7684\u4E2A\u6570 <code>n</code> \u5B9A\u4E49\u4E3A\u8868\u7684\u957F\u5EA6 = list.length (list.length = 0 (\u8868\u91CC\u6CA1\u6709\u5143\u7D20)\u65F6\u6210\u4E3A\u7A7A\u8868)</li><li>\u5C06\u975E\u7A7A\u7684\u7EBF\u6027\u8868 <code>(n &gt;= 1)</code> \u8BB0\u4F5C:<code>(a[0], a[1], a[2], a[3],..., a[n-1])</code></li><li>\u6570\u636E\u5143\u7D20 <code>a[i]</code> \u8FD9\u662F\u4E2A\u62BD\u8C61\u7B26\u53F7, \u5176\u5177\u4F53\u542B\u4E49\u5728\u4E0D\u540C\u60C5\u51B5\u4E0B\u53EF\u4EE5\u4E0D\u540C</li></ul><p>\u9700\u8981<strong>\u8BB0\u4F4F\u51E0\u4E2A\u5E38\u89C1\u7684\u7EBF\u6027\u7ED3\u6784</strong>\u5373\u53EF</p><p><img src="`+u+'" alt="\u56FE\u7247"></p><h3 id="\u6570\u7EC4-array-\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4-array-\u7ED3\u6784" aria-hidden="true">#</a> \u6570\u7EC4 (Array) \u7ED3\u6784</h3><p><strong>\u6570\u7EC4(Array) \u7ED3\u6784\u662F\u4E00\u79CD\u91CD\u8981\u7684\u6570\u636E\u7ED3\u6784</strong></p><ul><li>\u51E0\u4E4E\u662F\u6BCF\u79CD\u7F16\u7A0B\u8BED\u8A00\u90FD\u4F1A\u63D0\u4F9B\u7684\u4E00\u79CD<strong>\u539F\u751F\u6570\u636E\u7ED3\u6784</strong>(\u8BED\u8A00\u81EA\u5E26\u7684)</li><li>\u5E76\u4E14<strong>\u53EF\u4EE5\u501F\u52A9\u4E8E\u6570\u7EC4\u7ED3\u6784\u5B9E\u73B0\u5176\u4ED6\u7684\u6570\u636E\u7ED3\u6784</strong>: \u6BD4\u5982 \u6808(Stack), \u961F\u5217(Queue) , \u5806(Heap)</li></ul><p><strong>\u901A\u5E38\u6570\u7EC4\u7684\u5185\u5B58\u662F\u8FDE\u7EED\u7684, \u6240\u4EE5\u6570\u7EC4\u5728\u77E5\u9053\u4E0B\u6807\u503C\u7684\u60C5\u51B5\u4E0B, \u8BBF\u95EE\u6548\u7387\u662F\u975E\u5E38\u9AD8\u7684</strong><img src="'+i+'" alt="\u56FE\u7247"></p><h2 id="\u6808\u7ED3\u6784-stack" tabindex="-1"><a class="header-anchor" href="#\u6808\u7ED3\u6784-stack" aria-hidden="true">#</a> \u6808\u7ED3\u6784 (Stack)</h2><h3 id="\u8BA4\u8BC6\u6808\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u8BA4\u8BC6\u6808\u7ED3\u6784" aria-hidden="true">#</a> \u8BA4\u8BC6\u6808\u7ED3\u6784</h3><p><strong>\u6570\u7EC4</strong>:</p><ul><li>\u6570\u7EC4\u662F\u4E00\u79CD<strong>\u7EBF\u6027\u7ED3\u6784</strong>, \u5E76\u4E14\u53EF\u4EE5\u5728\u6570\u7EC4\u7684 <strong>\u4EFB\u610F\u4F4D\u7F6E</strong>, \u63D2\u5165\u548C\u5220\u9664\u6570\u636E</li><li>\u4F46\u662F\u6709\u65F6\u5019\u4E3A\u4E86\u5B9E\u73B0\u67D0\u4E9B\u529F\u80FD, \u5FC5\u987B\u5BF9\u8FD9\u79CD <strong>\u4EFB\u610F\u6027</strong> \u52A0\u4EE5 <strong>\u9650\u5236</strong></li><li>\u800C <strong>\u6808\u548C\u961F\u5217</strong> \u5C31\u662F\u6BD4\u8F83\u5E38\u89C1\u7684 <strong>\u53D7\u9650\u7684\u7EBF\u6027\u7ED3\u6784</strong><img src="'+k+'" alt="\u56FE\u7247"></li></ul><p>\u6808 Stack, \u5B83\u662F\u4E00\u79CD\u53D7\u9650\u7684\u7EBF\u6027\u7ED3\u6784, <strong>\u540E\u8FDB\u5148\u51FALIFO</strong></p><ul><li>\u5176\u9650\u5236\u662F\u53EA\u5141\u8BB8\u5728 <strong>\u8868\u7684\u4E00\u7AEF</strong> \u8FDB\u884C\u63D2\u5165\u548C\u5220\u9664\u8FD0\u7B97\u3002 \u8FD9\u4E00\u7AEF\u88AB\u79F0\u4E3A <strong>\u6808\u9876</strong>, \u76F8\u5BF9\u7684, \u628A\u53E6\u4E00\u7AEF\u79F0\u4E3A <strong>\u6808\u5E95</strong></li><li><code>LIFO(last in first out)</code> \u8868\u793A\u540E\u8FDB\u5165\u7684\u5143\u7D20, \u7B2C\u4E00\u4E2A\u5F39\u51FA\u6808\u7A7A\u95F4</li><li>\u50CF\u4E00\u4E2A\u6808\u63D2\u5165\u65B0\u5143\u7D20\u53C8\u79F0\u4E3A<strong>\u8FDB\u6808</strong>/<strong>\u5165\u6808</strong>\u6216<strong>\u538B\u6808</strong>, \u5B83\u662F\u628A\u65B0\u5143\u7D20\u653E\u5230\u6808\u9876\u5143\u7D20\u7684\u4E0A\u9762, \u4F7F\u4E4B\u6210\u4E3A\u65B0\u7684\u6808\u9876\u5143\u7D20</li><li>\u4ECE\u4E00\u4E2A\u6808\u5220\u9664\u5143\u7D20\u53C8\u79F0\u4E3A<strong>\u51FA\u6808/\u9000\u6808</strong>, \u5B83\u662F\u628A\u6808\u9876\u5143\u7D20\u5220\u9664\u6389, \u4F7F\u5176\u76F8\u90BB\u7684\u5143\u7D20\u6210\u4E3A\u65B0\u7684\u6808\u9876\u5143\u7D20</li></ul><h3 id="\u6808\u7ED3\u6784-\u9762\u8BD5\u9898" tabindex="-1"><a class="header-anchor" href="#\u6808\u7ED3\u6784-\u9762\u8BD5\u9898" aria-hidden="true">#</a> \u6808\u7ED3\u6784 \u9762\u8BD5\u9898</h3><p><img src="'+b+`" alt="\u56FE\u7247"></p><h3 id="\u5C01\u88C5-\u6808" tabindex="-1"><a class="header-anchor" href="#\u5C01\u88C5-\u6808" aria-hidden="true">#</a> \u5C01\u88C5 \u6808</h3><p>\u6808\u5E38\u89C1\u7684\u64CD\u4F5C:</p><ul><li><code>push()</code> : \u6DFB\u52A0\u4E00\u4E2A\u65B0\u5143\u7D20\u5230\u6808\u9876\u4F4D\u7F6E</li><li><code>pop()</code>: \u79FB\u9664\u6808\u9876\u7684\u5143\u7D20, \u540C\u65F6\u8FD4\u56DE\u88AB\u79FB\u9664\u7684\u5143\u7D20</li><li><code>peek()</code>: \u8FD4\u56DE\u6808\u9876\u7684\u5143\u7D20, \u4E0D\u5BF9\u6808\u505A\u4EFB\u4F55\u7684\u4FEE\u6539 (\u8FD9\u4E2A\u65B9\u6CD5\u4E0D\u4F1A\u79FB\u9664\u6808\u9876\u7684\u5143\u7D20, \u4EC5\u4EC5\u4F1A\u8FD4\u56DE\u5B83)</li><li><code>isEmpty()</code>: \u5982\u679C\u6808\u91CC\u6CA1\u6709\u4EFB\u4F55\u5143\u7D20\u5C31\u4F1A\u8FD4\u56DE <code>true</code>, \u5426\u5219\u4F1A\u8FD4\u56DE <code>false</code></li><li><code>size()</code>: \u8FD4\u56DE\u6808\u91CC\u7684\u5143\u7D20\u4E2A\u6570, \u8FD9\u4E2A\u65B9\u6CD5\u8DDF\u6570\u7EC4\u7684 length \u5C5E\u6027\u7C7B\u4F3C</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5C01\u88C5\u4E00\u4E2A\u6808</span>
<span class="token keyword">class</span> <span class="token class-name">ArrayStack</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u6570\u7EC4 , \u7528\u4E8E\u5B58\u50A8\u5143\u7D20</span>
  <span class="token keyword">private</span> data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5B9E\u73B0\u6808\u4E2D\u76F8\u5173\u7684\u4E00\u4E9B\u65B9\u6CD5</span>
  <span class="token comment">// push() : \u8BB2\u4E00\u4E2A\u5143\u7D20\u8E0F\u5165\u5230\u6808\u4E2D</span>
  <span class="token function">push</span><span class="token punctuation">(</span>element<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span> 
    <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// pop() : \u5C06\u6808\u9876\u7684\u5143\u7D20\u5F39\u51FA\u6808 , \u5E76\u8FD4\u56DE\u79FB\u9664\u7684\u5143\u7D20</span>
  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">any</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// peek():  \u770B\u4E00\u773C\u6808\u9876\u7684\u5143\u7D20, \u4F46\u662F\u4E0D\u8FDB\u884C\u4EFB\u4F55\u7684\u64CD\u4F5C</span>
  <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">any</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// isEmpty() :  \u6F58\u4E39\u6808\u662F\u5426\u4E3A\u7A7A</span>
  <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8FD4\u56DE\u6808\u7684\u6570\u636E\u7684\u4E2A\u6570</span>
  <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u521B\u5EFA Stack \u7684\u5B9E\u4F8B</span>
<span class="token keyword">const</span> stack1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
stack1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;frank&#39;</span><span class="token punctuation">)</span>
stack1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>
stack1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;frank&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack1<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// {name:&#39;frank&#39;}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack1<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 123</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack1<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack1<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>\u4F7F\u7528<strong>\u6CDB\u578B</strong>\u5BF9\u4E0A\u9762\u7684\u4EE3\u7801\u8FDB\u884C<strong>\u91CD\u6784</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5C01\u88C5\u4E00\u4E2A\u6808</span>
<span class="token keyword">class</span> <span class="token class-name">ArrayStack<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u6570\u7EC4 , \u7528\u4E8E\u5B58\u50A8\u5143\u7D20</span>
  <span class="token keyword">private</span> data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5B9E\u73B0\u6808\u4E2D\u76F8\u5173\u7684\u4E00\u4E9B\u65B9\u6CD5</span>
  <span class="token comment">// push() : \u8BB2\u4E00\u4E2A\u5143\u7D20\u8E0F\u5165\u5230\u6808\u4E2D</span>
  <span class="token function">push</span><span class="token punctuation">(</span>element<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span> 
    <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// pop() : \u5C06\u6808\u9876\u7684\u5143\u7D20\u5F39\u51FA\u6808 , \u5E76\u8FD4\u56DE\u79FB\u9664\u7684\u5143\u7D20</span>
  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// peek():  \u770B\u4E00\u773C\u6808\u9876\u7684\u5143\u7D20, \u4F46\u662F\u4E0D\u8FDB\u884C\u4EFB\u4F55\u7684\u64CD\u4F5C</span>
  <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// isEmpty() :  \u6F58\u4E39\u6808\u662F\u5426\u4E3A\u7A7A</span>
  <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8FD4\u56DE\u6808\u7684\u6570\u636E\u7684\u4E2A\u6570</span>
  <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u521B\u5EFA Stack \u7684\u5B9E\u4F8B</span>
<span class="token keyword">const</span> stack1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayStack<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
stack1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;frank&#39;</span><span class="token punctuation">)</span>
stack1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span>
stack1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;156151&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack1<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack1<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &#39;156151&#39;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack1<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//false</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack1<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="\u5B9E\u73B0\u63A5\u53E3\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u63A5\u53E3\u7C7B" aria-hidden="true">#</a> \u5B9E\u73B0\u63A5\u53E3\u7C7B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IStack<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span> <span class="token comment">// \u5B9E\u73B0\u7C7B\u63A5\u53E3</span>
  <span class="token function">push</span><span class="token punctuation">(</span>element<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>
  <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>
  <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
  <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5C01\u88C5\u4E00\u4E2A\u6808</span>
<span class="token keyword">class</span> <span class="token class-name">ArrayStack<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">IStack<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>  <span class="token comment">//&lt;----------------------- implements</span>
  <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u6570\u7EC4 , \u7528\u4E8E\u5B58\u50A8\u5143\u7D20</span>
  <span class="token keyword">private</span> data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5B9E\u73B0\u6808\u4E2D\u76F8\u5173\u7684\u4E00\u4E9B\u65B9\u6CD5</span>
  <span class="token comment">// push() : \u8BB2\u4E00\u4E2A\u5143\u7D20\u8E0F\u5165\u5230\u6808\u4E2D</span>
  <span class="token function">push</span><span class="token punctuation">(</span>element<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span> 
    <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// pop() : \u5C06\u6808\u9876\u7684\u5143\u7D20\u5F39\u51FA\u6808 , \u5E76\u8FD4\u56DE\u79FB\u9664\u7684\u5143\u7D20</span>
  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// peek():  \u770B\u4E00\u773C\u6808\u9876\u7684\u5143\u7D20, \u4F46\u662F\u4E0D\u8FDB\u884C\u4EFB\u4F55\u7684\u64CD\u4F5C</span>
  <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// isEmpty() :  \u6F58\u4E39\u6808\u662F\u5426\u4E3A\u7A7A</span>
  <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8FD4\u56DE\u6808\u7684\u6570\u636E\u7684\u4E2A\u6570</span>
  <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h3 id="\u6808\u9762\u8BD5\u9898-\u5341\u8FDB\u5236\u8F6C\u4E8C\u8FDB\u5236" tabindex="-1"><a class="header-anchor" href="#\u6808\u9762\u8BD5\u9898-\u5341\u8FDB\u5236\u8F6C\u4E8C\u8FDB\u5236" aria-hidden="true">#</a> \u6808\u9762\u8BD5\u9898 - \u5341\u8FDB\u5236\u8F6C\u4E8C\u8FDB\u5236</h3><p>\u5355\u8BCD : \u5341\u8FDB\u5236: <code>decimal</code> , \u4E8C\u8FDB\u5236: <code>binary</code></p><p>\u628A\u4F59\u6570\u5B58\u5165\u6808\u4E2D, \u7136\u540E\u4F9D\u6B21\u53D6\u51FA</p><p><img src="`+m+`" alt="\u56FE\u7247"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5341\u8FDB\u5236 \u8F6C\u4E3A \u4E8C\u8FDB\u5236</span>
<span class="token keyword">function</span> <span class="token function">decimalToBinary</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">decimal</span> <span class="token operator">:</span>number</span><span class="token punctuation">)</span> <span class="token operator">:</span> string <span class="token punctuation">{</span>
  <span class="token comment">// 1. \u521B\u5EFA\u4E00\u4E2A\u6808 , \u7528\u6765\u5B58\u653E\u4F59\u6570</span>
  <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayStack</span><span class="token operator">&lt;</span>number<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  
  <span class="token comment">// 2. \u4F7F\u7528\u5FAA\u73AF</span>
  <span class="token comment">// while : \u4E0D\u786E\u5B9A\u6B21\u6570, \u53EA\u77E5\u9053\u5FAA\u73AF\u7ED3\u675F\u6761\u4EF6</span>
  <span class="token comment">// for : \u77E5\u9053\u5FAA\u73AF\u7684\u6B21\u6570</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>decimal <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F59\u6570 result</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> decimal <span class="token operator">%</span> <span class="token number">2</span> 
    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
    
    decimal <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>decimal <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 3.  \u6240\u6709\u7684\u4F59\u6570\u90FD\u5728 stack \u4E2D , \u6240\u4EE5\u53D6\u51FA\u5373\u53EF</span>
  <span class="token comment">// \u53EA\u8981\u6808\u4E0D\u4E3A\u7A7A, \u4E00\u76F4\u5FAA\u73AF, \u53D6\u51FA\u5143\u7D20</span>
  <span class="token keyword">let</span> binary <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// console.log(stack.pop())</span>
    binary <span class="token operator">+=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> binary
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">decimalToBinary</span><span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="\u6808\u9762\u8BD5\u9898-\u6709\u6548\u7684\u62EC\u53F7" tabindex="-1"><a class="header-anchor" href="#\u6808\u9762\u8BD5\u9898-\u6709\u6548\u7684\u62EC\u53F7" aria-hidden="true">#</a> \u6808\u9762\u8BD5\u9898 : \u6709\u6548\u7684\u62EC\u53F7</h3><p><img src="`+d+`" alt="\u56FE\u7247"></p><p>\u89E3\u4F53\u601D\u8DEF\u662F : <strong>\u4E00\u4E00\u5BF9\u5E94</strong></p><ul><li>\u5FAA\u73AF\u62EC\u53F7\u5B57\u7B26\u4E32, \u5982\u679C\u9047\u5230 <code>(</code>\u5DE6\u62EC\u53F7, <strong>\u6808</strong>\u91CC\u5B58\u653E\u5BF9\u5E94\u7684 <code>)</code> \u53F3\u62EC\u53F7, \u9047\u5230 <code>{</code>, \u6808\u91CC\u5B58\u653E\u5BF9\u5E94\u7684 <code>}</code> .....</li><li>\u7136\u540E\u5176\u4ED6\u5B57\u7B26\u4E32\u4E0D\u7B49\u4E8E<code>stack.pop()</code> \u76F4\u63A5 return false</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">isValid</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span> 
  <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayStack<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">const</span> c <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u628A\u5BF9\u5E94\u7684\u7B26\u53F7 \u5165\u6808</span>
      <span class="token keyword">case</span> <span class="token string">&#39;(&#39;</span><span class="token operator">:</span>
        stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>
      <span class="token keyword">case</span> <span class="token string">&#39;{&#39;</span><span class="token operator">:</span>
        stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;}&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>
      <span class="token keyword">case</span> <span class="token string">&#39;[&#39;</span><span class="token operator">:</span>
        stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>
      <span class="token keyword">default</span><span class="token operator">:</span> 
        <span class="token keyword">if</span><span class="token punctuation">(</span>c <span class="token operator">!==</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>  
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span>  <span class="token comment">// &#39;(){}[&#39;  \u8FD9\u79CD\u60C5\u51B5\u6700\u540E\u5269\u4E86 [ , \u4E5F\u662F\u65E0\u6548\u7684</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token string">&#39;(){}[]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment">// true</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token string">&#39;(){}[&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment">// false</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token string">&#39;({})[]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#\u961F\u5217" aria-hidden="true">#</a> \u961F\u5217</h2><h3 id="\u961F\u5217\u7684\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u961F\u5217\u7684\u7279\u6027" aria-hidden="true">#</a> \u961F\u5217\u7684\u7279\u6027</h3><p><strong>\u53D7\u9650\u7684\u7EBF\u6027\u7ED3\u6784</strong>:</p><ul><li>\u524D\u9762\u603B\u7ED3\u4E86\u4E00\u79CD <strong>\u53D7\u9650\u7684\u7EBF\u6027\u7ED3\u6784</strong>: \u6808\u7ED3\u6784</li><li>\u5E76\u4E14\u77E5\u9053\u4E86\u8FD9\u79CD\u53D7\u9650\u7684\u7EBF\u6027\u7ED3\u6784\u5BF9\u4E8E\u89E3\u51B3\u67D0\u4E9B<strong>\u7279\u5B9A\u7684\u95EE\u9898</strong>, \u4F1A\u6709<strong>\u7279\u522B\u7684\u6548\u679C</strong></li></ul><p>\u961F\u5217, \u7279\u4F7F\u4E00\u79CD\u53D7\u9650\u7684\u7EBF\u6027\u8868, <strong>\u5148\u8FDB\u5148\u51FA <code>first in last out</code></strong></p><ul><li>\u53D7\u9650\u4E4B\u5904\u5728\u4E8E\u5B83\u53EA\u5141\u8BB8\u5728\u961F\u5217\u7684 <strong>\u524D\u7AEF(front)</strong> \u8FDB\u884C\u5220\u9664\u64CD\u4F5C</li><li>\u800C\u5728\u961F\u5217\u7684 <strong>\u540E\u7AEF(rear)</strong> \u8FDB\u884C\u63D2\u5165\u64CD\u4F5C</li></ul><p><img src="`+g+'" alt="\u56FE\u7247"></p><p>\u751F\u6D3B\u4E2D\u7684\u7C7B\u4F3C\u7684\u961F\u5217\u7ED3\u6784:</p><ol><li>\u7535\u5F71\u9662, \u5546\u573A, \u5395\u6240\u6392\u961F</li><li>\u4F18\u5148\u6392\u961F\u7684\u4EBA, \u4F18\u5148\u5904\u7406 (\u4E70\u7968, \u7ED3\u8D26, wc) <img src="'+y+`" alt="\u56FE\u7247"></li></ol><h3 id="\u961F\u5217\u7684\u5E38\u89C1\u65B9\u6CD5-\u5C01\u88C5\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u961F\u5217\u7684\u5E38\u89C1\u65B9\u6CD5-\u5C01\u88C5\u7C7B" aria-hidden="true">#</a> \u961F\u5217\u7684\u5E38\u89C1\u65B9\u6CD5 - \u5C01\u88C5\u7C7B</h3><p><strong>\u961F\u5217\u5E38\u89C1\u7684\u64CD\u4F5C</strong>:</p><ul><li><code> enqueue(element)</code>: \u5411\u961F\u5217\u5C3E\u90E8\u6DFB\u52A0\u4E00\u4E2A(\u6216\u591A\u4E2A)\u65B0\u7684\u9879</li><li><code>dequeue()</code>: \u79FB\u9664\u961F\u5217\u7684\u7B2C\u4E00(\u5373\u6392\u5728\u961F\u5217\u6700\u524D\u9762\u7684\u9879) , \u5E76\u8FD4\u56DE\u88AB\u79FB\u9664\u7684\u5143\u7D20</li><li><code>font/peek()</code> : \u8FD4\u56DE\u961F\u5217\u4E2D\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20-----\u6700\u5148\u88AB\u6DFB\u52A0, \u4E5F\u5C06\u662F\u6700\u5148\u88AB\u79FB\u9664\u7684\u5143\u7D20,\u961F\u5217\u4E0D\u505A\u4EFB\u4F55\u7684\u53D8\u52A8(\u4E0D\u79FB\u9664\u5143\u7D20, \u53EA\u8FD4\u56DE\u5143\u7D20\u4FE1\u606F ----- \u4E0E stack \u6808\u7684peek\u65B9\u6CD5\u7C7B\u4F3C)</li><li><code>isEmpty()</code>: \u5982\u679C\u961F\u5217\u4E0D\u5305\u542B\u4EFB\u4F55\u5143\u7D20, \u8FD4\u56DE true, \u5426\u5219 \u8FD4\u56DE false</li><li><code>size()</code>: \u8FD4\u56DE\u961F\u5217\u5305\u542B\u7684\u5143\u7D20\u4E2A\u6570, \u4E0E\u6570\u7EC4\u7684 length \u5C5E\u6027\u7C7B\u4F3C</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IQueue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token function-variable function">enqueue</span><span class="token operator">:</span> <span class="token punctuation">(</span>element<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  <span class="token function-variable function">dequeue</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>
  <span class="token function-variable function">peek</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>
  <span class="token function-variable function">isEmpty</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>
  <span class="token function-variable function">size</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">ArrayQueue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">IQueue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. \u5B9A\u4E49\u4E00\u4E2A\u6570\u7EC4</span>
  <span class="token keyword">private</span> data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  
  <span class="token function">enqueue</span><span class="token punctuation">(</span>element<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
  <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="\u51FB\u9F13\u4F20\u753B-\u9762\u8BD5\u9898" tabindex="-1"><a class="header-anchor" href="#\u51FB\u9F13\u4F20\u753B-\u9762\u8BD5\u9898" aria-hidden="true">#</a> \u51FB\u9F13\u4F20\u753B \u9762\u8BD5\u9898</h3><p>\u6570 <code>1,2,3</code> , \u6570\u5230 <code>3</code> \u7684\u4EBA\u88AB\u6DD8\u6C70 , \u76F4\u5230\u6570\u5230\u52691\u4E2A\u4EBA\u4E3A\u6B62, \u6E38\u620F\u7ED3\u675F</p><p>\u4E3B\u8981\u601D\u8DEF:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u5FAA\u73AF: queue.size<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span> 
\u5FAA\u73AF\u4F53\u4E2D\u8FDB\u884C\u4EC0\u4E48\u64CD\u4F5C? <span class="token builtin class-name">:</span>
<span class="token number">1</span><span class="token punctuation">)</span> \u6570\u5230 <span class="token number">1</span> \u6216 <span class="token number">2</span> \u7684\u4EBA <span class="token builtin class-name">:</span> \u51FA\u961F, , \u5728\u5165\u961F
<span class="token number">2</span><span class="token punctuation">)</span> \u6570\u5230 <span class="token number">3</span> \u7684\u4EBA: \u51FA\u961F, \u518D\u4E0D\u9700\u8981\u5165\u961F
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">hotPotato</span><span class="token punctuation">(</span>names<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>names<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token keyword">return</span> 
  <span class="token comment">// 1. \u521B\u5EFA\u961F\u5217</span>
  <span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayQueue<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// 2. \u5FAA\u73AF\u6570\u7EC4, \u628A\u6240\u6709\u5143\u7D20\u5165\u6808</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> name <span class="token keyword">of</span> names<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    queue<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5FAA\u73AF\u7684\u89C4\u5219</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1 \u6216 2 , \u4E0D\u6DD8\u6C70</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> name <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> queue<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 3 \u4F1A\u6DD8\u6C70</span>
    queue<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> index <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> index
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">hotPotato</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;why&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;kobe&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;james&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;curry&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="\u7EA6\u745F\u592B-\u9762\u8BD5\u9898" tabindex="-1"><a class="header-anchor" href="#\u7EA6\u745F\u592B-\u9762\u8BD5\u9898" aria-hidden="true">#</a> \u7EA6\u745F\u592B \u9762\u8BD5\u9898</h3><p><img src="`+w+`" alt="\u56FE\u7247"></p><p>\u548C\u5728\u4E0A\u9762\u5B9E\u73B0\u7684\u51FB\u9F13\u4F20\u82B1\u662F\u4E00\u6837\u7684\u601D\u8DEF</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u7EA6\u745F\u592B\u73AF</span>
<span class="token keyword">function</span> <span class="token function">lastRemaining</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> m<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayQueue<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    queue<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> num <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token punctuation">)</span> queue<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    queue<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> queue<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">lastRemaining</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment">//  3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="\u94FE\u8868\u7ED3\u6784-linkedlist" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868\u7ED3\u6784-linkedlist" aria-hidden="true">#</a> \u94FE\u8868\u7ED3\u6784 (LinkedList)</h2><p>\u94FE\u8868\u548C\u6570\u7EC4\u4E00\u6837, \u53EF\u7528\u4E8E<strong>\u5B58\u50A8\u4E00\u7CFB\u5217\u7684\u5143\u7D20</strong>. \u4F46\u662F\u94FE\u8868\u548C\u6570\u7EC4\u7684<strong>\u5B9E\u73B0\u673A\u5236\u5B8C\u5168\u4E0D\u540C</strong></p><p>\u8981\u5B58\u50A8\u591A\u4E2A\u5143\u7D20, \u53E6\u5916\u4E00\u4E2A\u9009\u62E9\u5C31\u662F\u94FE\u8868</p><p>\u4F46\u4E0D\u540C\u4E8E\u6570\u7EC4, \u94FE\u8868\u4E2D\u7684\u5143\u7D20\u5728\u5185\u5B58\u4E2D<strong>\u4E0D\u5FC5\u662F\u8FDE\u7EED\u7684\u7A7A\u95F4</strong></p><ul><li>\u94FE\u8868\u7684\u6BCF\u4E00\u4E2A\u5143\u7D20\u7531\u4E00\u4E2A\u5B58\u50A8<strong>\u5143\u7D20\u672C\u8EAB\u7684\u8282\u70B9</strong>\u548C\u4E00\u4E2A<strong>\u6307\u5411\u4E0B\u4E00\u4E2A\u5143\u7D20\u7684\u5F15\u7528</strong>(\u6709\u5199\u8BED\u8A00\u79F0\u4E3A\u6307\u9488\u6216\u8005\u5F15\u7528)\u7EC4\u6210</li></ul><p><strong>\u76F8\u5BF9\u4E8E\u6570\u7EC4, \u94FE\u8868\u6709\u4E00\u4E9B\u4F18\u70B9</strong></p><ul><li>\u5185\u5B58\u7A7A\u95F4\u4E0D\u662F\u5FC5\u987B\u662F\u8FDE\u7EED\u7684 <ul><li>\u53EF\u4EE5\u5145\u5206\u7684\u5229\u7528\u8BA1\u7B97\u673A\u7684\u5185\u5B58, \u5B9E\u73B0\u7075\u6D3B\u7684<strong>\u5185\u5B58\u52A8\u6001\u7BA1\u7406</strong></li></ul></li><li>\u94FE\u8868\u4E0D\u5FC5\u5728\u521B\u5EFA\u65F6\u5C31<strong>\u786E\u5B9A\u5927\u5C0F</strong>, \u5E76\u4E14\u5927\u5C0F\u53EF\u4EE5<strong>\u65E0\u9650\u7684\u5EF6\u4F38</strong>\u4E0B\u53BB</li><li>\u94FE\u8868\u5728<strong>\u63D2\u5165\u548C\u5220\u9664</strong>\u6570\u636E\u65F6, \u65F6\u95F4\u590D\u6742\u5EA6\u53EF\u4EE5\u8FBE\u5230 <code>O(1)</code><ul><li>\u76F8\u5BF9\u6570\u7EC4\u6548\u7387\u9AD8\u5F88\u591A</li></ul></li></ul><p><strong>\u76F8\u5BF9\u4E8E\u6570\u7EC4, \u94FE\u8868\u6709\u4E00\u4E0B\u7F3A\u70B9:</strong></p><ul><li>\u94FE\u8868\u8BBF\u95EE\u4EFB\u4F55\u4E00\u4E2A\u4F4D\u7F6E\u7684\u5143\u7D20\u65F6, \u90FD<strong>\u9700\u8981\u4ECE\u5934\u5F00\u59CB\u8BBF\u95EE</strong>(\u65E0\u6CD5\u8DF3\u8FC7\u7B2C\u4E00\u4E2A\u5143\u7D20\u8BBF\u95EE\u4EFB\u4F55\u4E00\u4E2A\u5143\u7D20)</li><li><strong>\u65E0\u6CD5\u901A\u8FC7\u4E0B\u6807\u76F4\u63A5\u8BBF\u95EE\u5143\u7D20</strong>, \u9700\u8981\u4ECE\u5934\u4E00\u4E2A\u4E00\u4E2A\u8BBF\u95EE, \u76F4\u5230\u627E\u5230\u5BF9\u5E94\u7684\u5143\u7D20</li></ul><p>\u94FE\u8868\u7C7B\u4F3C\u4E8E\u706B\u8F66, \u6709\u4E00\u4E2A\u706B\u8F66\u5934, \u706B\u8F66\u5934\u4F1A\u8FDE\u63A5\u4E00\u4E2A\u8282\u70B9, \u8282\u70B9\u4E0A\u6709\u4E58\u5BA2(\u7C7B\u4F3C\u4E8E\u6570\u636E), \u5E76\u4E14\u8FD9\u4E2A\u8282\u70B9\u4F1A\u8FDE\u63A5\u4E0B\u4E00\u4E2A\u8282\u70B9, \u4EE5\u6B64\u7C7B\u63A8 <img src="`+h+`" alt="\u56FE\u7247"></p><h3 id="\u94FE\u8868\u7ED3\u6784\u7684\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868\u7ED3\u6784\u7684\u5C01\u88C5" aria-hidden="true">#</a> \u94FE\u8868\u7ED3\u6784\u7684\u5C01\u88C5</h3><ul><li><strong>\u5C01\u88C5\u4E00\u4E2A Node \u7C7B</strong> , \u7528\u4E8E\u5C01\u88C5\u6BCF\u4E00\u4E2A\u8282\u70B9\u4E0A\u7684\u4FE1\u606F(\u5305\u62EC\u503C\u7684\u6307\u5411\u4E0B\u4E00\u4E2A\u8282\u70B9\u7684\u5F15\u7528), \u5B83\u662F\u4E00\u4E2A\u6CDB\u578B\u7C7B</li><li><strong>\u5C01\u88C5\u4E00\u4E2A LinkedList \u7C7B</strong>, \u7528\u4E8E\u8868\u793A\u6211\u4EEC\u7684\u94FE\u8868\u7ED3\u6784</li><li>\u94FE\u8868\u4E2D\u6211\u4EEC\u4FDD\u5B58\u4E24\u4E2A\u5C5E\u6027, \u4E00\u4E2A\u662F<strong>\u94FE\u8868\u7684\u957F\u5EA6</strong>, \u4E00\u4E2A\u662F<strong>\u94FE\u8868\u7684\u7B2C\u4E00\u4E2A\u8282\u70B9</strong></li><li>\u5F53\u7136\u8FD8\u6709\u5F88\u591A\u94FE\u8868\u7684\u5176\u4ED6\u64CD\u4F5C\u65B9\u6CD5 , \u4E0B\u9762\u518D\u603B\u7ED3</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u8282\u70B9</span>
<span class="token keyword">class</span> <span class="token class-name">Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span>
  next<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u94FE\u8868</span>
<span class="token keyword">class</span> <span class="token class-name">LinkedList<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> head<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">private</span> size<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
  
  <span class="token keyword">get</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="\u94FE\u8868\u5E38\u89C1\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868\u5E38\u89C1\u64CD\u4F5C" aria-hidden="true">#</a> \u94FE\u8868\u5E38\u89C1\u64CD\u4F5C</h3><p><strong>\u94FE\u8868\u7684\u5E38\u89C1\u64CD\u4F5C</strong>: <img src="`+f+`" alt="\u56FE\u7247"></p><h4 id="\u5C3E\u90E8\u6DFB\u52A0\u5143\u7D20-append" tabindex="-1"><a class="header-anchor" href="#\u5C3E\u90E8\u6DFB\u52A0\u5143\u7D20-append" aria-hidden="true">#</a> \u5C3E\u90E8\u6DFB\u52A0\u5143\u7D20 append()</h4><p>\u5411\u94FE\u8868<em>\u5C3E\u90E8\u8FFD\u52A0\u4E00\u4E2A\u6570\u636E</em>\u53EF\u80FD\u6709\u4E24\u79CD\u60C5\u51B5:</p><ul><li><strong>\u94FE\u8868\u672C\u8EAB\u4E3A\u7A7A</strong> : \u65B0\u6DFB\u52A0\u7684\u6570\u636E\u662F\u552F\u4E00\u7684\u8282\u70B9</li><li><strong>\u94FE\u8868\u4E0D\u4E3A\u7A7A</strong> : \u9700\u8981\u5728\u5176\u4ED6\u8282\u70B9\u540E\u9762\u8FFD\u52A0\u6570\u636E</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span>
  next<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">LinkedList<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> head<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">private</span> size<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
  
  <span class="token keyword">get</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size
  <span class="token punctuation">}</span>
  <span class="token comment">// append() : \u5411\u94FE\u8868\u5C3E\u90E8\u8FFD\u52A0\u6570\u636E</span>
  <span class="token function">append</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token comment">// (1)\u5982\u679C\u94FE\u8868\u4E3A\u7A7A </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> newNode
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// (2) \u94FE\u8868\u4E0D\u4E3A\u7A7A</span>
      <span class="token comment">// \u627E\u5230\u6700\u540E\u4E00\u4E2A\u6781\u70B9, \u628A\u5B83\u7684 next \u6307\u5411\u65B0\u7684\u5143\u7D20</span>
      <span class="token comment">// \u600E\u4E48\u627E? \u641E\u4E00\u4E2A\u4E34\u65F6\u53D8\u91CF, \u53EA\u8981\u8282\u70B9\u7684 next \u6709\u503C, \u5C31\u5FAA\u73AF\u5FAA\u73AF \u627E\u5230\u6700\u540E\u7684\u4E00\u9879(\u56E0\u4E3A\u6700\u540E\u4E00\u9879\u5C31\u6CA1\u6709 next)  </span>
      <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
      <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
      <span class="token punctuation">}</span>
      <span class="token comment">// \u73B0\u5728 current \u5DF2\u7ECF\u662F\u6700\u540E\u4E00\u9879</span>
      current<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">++</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p><img src="`+v+`" alt="\u56FE\u7247"></p><h4 id="\u904D\u5386\u94FE\u8868\u7684\u65B9\u6CD5-traverse" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386\u94FE\u8868\u7684\u65B9\u6CD5-traverse" aria-hidden="true">#</a> \u904D\u5386\u94FE\u8868\u7684\u65B9\u6CD5 traverse</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span>
  next<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">LinkedList<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> head<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">private</span> size<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
  
  <span class="token keyword">get</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size
  <span class="token punctuation">}</span>
  <span class="token comment">// append(element) : \u5411\u94FE\u8868\u5C3E\u90E8\u8FFD\u52A0\u6570\u636E</span>
  <span class="token function">append</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token comment">// (1)\u5982\u679C\u94FE\u8868\u4E3A\u7A7A </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> newNode
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// (2) \u94FE\u8868\u4E0D\u4E3A\u7A7A</span>
      <span class="token comment">// \u627E\u5230\u6700\u540E\u4E00\u4E2A\u6781\u70B9, \u628A\u5B83\u7684 next \u6307\u5411\u65B0\u7684\u5143\u7D20</span>
      <span class="token comment">// \u600E\u4E48\u627E? \u641E\u4E00\u4E2A\u4E34\u65F6\u53D8\u91CF, \u53EA\u8981\u8282\u70B9\u7684 next \u6709\u503C, \u5C31\u5FAA\u73AF\u5FAA\u73AF \u627E\u5230\u6700\u540E\u7684\u4E00\u9879(\u56E0\u4E3A\u6700\u540E\u4E00\u9879\u5C31\u6CA1\u6709 next)  </span>
      <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
      <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
      <span class="token punctuation">}</span>
      <span class="token comment">// \u73B0\u5728 current \u5DF2\u7ECF\u662F\u6700\u540E\u4E00\u9879</span>
      current<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">++</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u904D\u5386\u94FE\u8868\u6253\u5370\u8282\u70B9\u7684 value</span>
  <span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
    <span class="token keyword">const</span> values<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      values<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
      current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
    <span class="token punctuation">}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;-&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> linkedList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;ccc&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;ddd&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// aaa-&gt;bbb-&gt;ccc-&gt;ddd</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><h4 id="\u6307\u5B9A\u4F4D\u7F6E\u63D2\u5165\u5143\u7D20-insert-value-position" tabindex="-1"><a class="header-anchor" href="#\u6307\u5B9A\u4F4D\u7F6E\u63D2\u5165\u5143\u7D20-insert-value-position" aria-hidden="true">#</a> \u6307\u5B9A\u4F4D\u7F6E\u63D2\u5165\u5143\u7D20 insert(value, position)</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token constant">T</span>
  <span class="token literal-property property">next</span><span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token constant">T</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">LinkedList</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token literal-property property">head</span><span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">private</span> <span class="token literal-property property">size</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">0</span>
  
  <span class="token keyword">get</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size
  <span class="token punctuation">}</span>
  <span class="token comment">// append() : \u5411\u94FE\u8868\u5C3E\u90E8\u8FFD\u52A0\u6570\u636E</span>
  <span class="token function">append</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token constant">T</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token function">insert</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token literal-property property">position</span><span class="token operator">:</span> number<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>
    <span class="token comment">// \u8FB9\u754C\u5904\u7406</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> position <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span> 
    <span class="token comment">// 1. \u521B\u5EFA Node \u8282\u70B9</span>
    <span class="token keyword">const</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token comment">// 2. \u5206\u60C5\u51B5\u63D2\u5165: \u5934\u90E8 / \u6216\u8005\u5176\u4ED6</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u63D2\u5165\u5230\u5934\u90E8\u7684\u60C5\u51B5</span>
      newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> newNode
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u63D2\u5165\u5230\u5176\u4ED6\u4F4D\u7F6E\u7684\u60C5\u51B5</span>
      <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
      <span class="token keyword">let</span> <span class="token literal-property property">previous</span><span class="token operator">:</span>Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> position <span class="token operator">&amp;&amp;</span> current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        index<span class="token operator">++</span>
        previous <span class="token operator">=</span> current
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
      <span class="token punctuation">}</span>
      newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> current
      previous<span class="token operator">!</span><span class="token punctuation">.</span>next <span class="token operator">=</span> newNode
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">++</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> linkedList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;ccc&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;ddd&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// aaa-&gt;bbb-&gt;ccc-&gt;ddd</span>
linkedList<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&#39;cba&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// aaa-&gt;bbb-&gt;cba-&gt;ccc-&gt;ddd</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><p>\u9700\u8981\u753B\u56FE\u7406\u89E3 <img src="`+x+'" alt="\u56FE\u7247"><img src="'+L+'" alt="\u56FE\u7247"></p><h4 id="\u6839\u636E\u4F4D\u7F6E\u5220\u9664\u8282\u70B9-removeat" tabindex="-1"><a class="header-anchor" href="#\u6839\u636E\u4F4D\u7F6E\u5220\u9664\u8282\u70B9-removeat" aria-hidden="true">#</a> \u6839\u636E\u4F4D\u7F6E\u5220\u9664\u8282\u70B9 removeAt</h4><p>\u79FB\u9664\u6570\u636E\u6709\u4E24\u79CD\u5E38\u89C1\u7684\u65B9\u5F0F</p><ol><li>\u6839\u636E\u4F4D\u7F6E\u79FB\u9664\u5BF9\u5E94\u7684\u6570\u636E</li><li>\u6839\u636E\u6570\u636E, \u627E\u5230\u5BF9\u5E94\u7684\u4F4D\u7F6E, \u518D\u79FB\u9664\u6570\u636E</li></ol><p>\u79FB\u9664\u7B2C\u4E00\u9879\u7684\u6570\u636E</p><ul><li>\u79FB\u9664\u7B2C\u4E00\u9879\u65F6, \u76F4\u63A5\u8BA9 head \u6307\u5411\u7B2C\u4E8C\u4E2A\u6570\u636E\u5C31\u53EF\u4EE5\u4E86</li><li>\u90A3\u4E48\u7B2C\u4E00\u9879\u6570\u636E\u6CA1\u6709\u5F15\u7528\u6307\u5411, \u5C31\u5728\u4FE9\u8868\u4E2D\u4E0D\u5728\u751F\u6548, \u540E\u9762\u5C31\u4F1A\u88AB\u56DE\u6536\u6389</li></ul><p>\u79FB\u9664\u5176\u4ED6\u9879\u7684\u6570\u636E</p><ul><li>\u79FB\u9664\u5176\u4ED6\u9879\u7684\u6570\u636E\u64CD\u4F5C\u662F\u76F8\u540C\u7684</li><li>\u9996\u5148, \u9700\u8981\u901A\u8FC7 while \u5FAA\u73AF\u627E\u5230\u6B63\u786E\u7684\u4F4D\u7F6E</li><li>\u624E\u5230\u6B63\u786E\u7684\u4F4D\u7F6E\u540E, \u5C31\u53EF\u4EE5\u8BA9\u4E0A\u4E00\u4E2A\u9879\u7684 next \u6307\u5411 current \u9879\u7684 next, \u8FD9\u6837\u4E2D\u95F4\u9879\u5C31\u6CA1\u6709\u5F15\u7528\u6307\u5411\u5B83, \u4E5F\u5C31\u4E0D\u5728\u5B58\u5728\u4E8E\u94FE\u8868\u4E2D, \u540E\u9762\u4F1A\u88AB\u56DE\u6536\u6389</li></ul><p><img src="'+T+`" alt="\u56FE\u7247"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span>
  next<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">LinkedList<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> head<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">private</span> size<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
  
  <span class="token keyword">get</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size
  <span class="token punctuation">}</span>
  <span class="token comment">// append() : \u5411\u94FE\u8868\u5C3E\u90E8\u8FFD\u52A0\u6570\u636E</span>
  <span class="token function">append</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u904D\u5386\u94FE\u8868\u6253\u5370\u8282\u70B9\u7684 value</span>
  <span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token function">insert</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> position<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
   <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6839\u636E\u4F4D\u7F6E\u79FB\u9664</span>
  <span class="token function">removeAt</span><span class="token punctuation">(</span>position<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> position <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>

    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token operator">!</span><span class="token punctuation">.</span>next
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> previous<span class="token operator">:</span>Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> position <span class="token operator">&amp;&amp;</span> current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        previous <span class="token operator">=</span> current
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
        index<span class="token operator">++</span>
      <span class="token punctuation">}</span>
      previous<span class="token operator">!</span><span class="token punctuation">.</span>next <span class="token operator">=</span> current<span class="token operator">?.</span>next <span class="token operator">??</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">--</span>
    <span class="token keyword">return</span> current<span class="token operator">?.</span>value <span class="token operator">??</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> linkedList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;ccc&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;ddd&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// aaa-&gt;bbb-&gt;ccc-&gt;ddd</span>
linkedList<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&#39;cba&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// aaa-&gt;bbb-&gt;cba-&gt;ccc-&gt;ddd</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">removeAt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// aaa-&gt;bbb-&gt;cba-&gt;ccc-&gt;ddd</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><h4 id="\u6839\u636E\u4F4D\u7F6E\u83B7\u53D6\u5143\u7D20-get" tabindex="-1"><a class="header-anchor" href="#\u6839\u636E\u4F4D\u7F6E\u83B7\u53D6\u5143\u7D20-get" aria-hidden="true">#</a> \u6839\u636E\u4F4D\u7F6E\u83B7\u53D6\u5143\u7D20 get</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span>
  next<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">LinkedList<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> head<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">private</span> size<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
  
  <span class="token keyword">get</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size
  <span class="token punctuation">}</span>
  <span class="token comment">// append() : \u5411\u94FE\u8868\u5C3E\u90E8\u8FFD\u52A0\u6570\u636E</span>
  <span class="token function">append</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u904D\u5386\u94FE\u8868\u6253\u5370\u8282\u70B9\u7684 value</span>
  <span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token function">insert</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> position<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
   <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6839\u636E\u4F4D\u7F6E\u79FB\u9664</span>
  <span class="token function">removeAt</span><span class="token punctuation">(</span>position<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> position <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>

    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token operator">!</span><span class="token punctuation">.</span>next
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> previous<span class="token operator">:</span>Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> position <span class="token operator">&amp;&amp;</span> current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        previous <span class="token operator">=</span> current
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
        index<span class="token operator">++</span>
      <span class="token punctuation">}</span>
      previous<span class="token operator">!</span><span class="token punctuation">.</span>next <span class="token operator">=</span> current<span class="token operator">?.</span>next <span class="token operator">??</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">--</span>
    <span class="token keyword">return</span> current<span class="token operator">?.</span>value <span class="token operator">??</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
    <span class="token comment">// \u6839\u636E\u4F4D\u7F6E\u83B7\u53D6\u5143\u7D20</span>
  <span class="token function">get</span><span class="token punctuation">(</span>position<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> position <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>
    
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token operator">!</span><span class="token punctuation">.</span>value
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
      <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> position <span class="token operator">&amp;&amp;</span> current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
        index<span class="token operator">++</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> current<span class="token operator">?.</span>value <span class="token operator">??</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> linkedList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;ccc&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;ddd&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// aaa-&gt;bbb-&gt;ccc-&gt;ddd</span>
linkedList<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&#39;cba&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// aaa-&gt;bbb-&gt;cba-&gt;ccc-&gt;ddd</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">removeAt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// aaa-&gt;bbb-&gt;cba-&gt;ccc-&gt;ddd</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// aaa</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// bbb</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br></div></div><h4 id="\u5176\u4ED6\u65B9\u6CD5\u8865\u5145" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6\u65B9\u6CD5\u8865\u5145" aria-hidden="true">#</a> \u5176\u4ED6\u65B9\u6CD5\u8865\u5145</h4><ol><li><code>update(position, value)</code> \u4FEE\u6539\u67D0\u4E2A\u4F4D\u7F6E\u7684\u5143\u7D20</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span>
  next<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">LinkedList<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> head<span class="token operator">:</span> Node<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">private</span> size<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
  
  <span class="token keyword">get</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size
  <span class="token punctuation">}</span>
  <span class="token comment">// append() : \u5411\u94FE\u8868\u5C3E\u90E8\u8FFD\u52A0\u6570\u636E</span>
  <span class="token function">append</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u904D\u5386\u94FE\u8868\u6253\u5370\u8282\u70B9\u7684 value</span>
  <span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token function">insert</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> position<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6839\u636E\u4F4D\u7F6E\u79FB\u9664</span>
  <span class="token function">removeAt</span><span class="token punctuation">(</span>position<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6839\u636E\u4F4D\u7F6E\u83B7\u53D6\u5143\u7D20</span>
  <span class="token function">get</span><span class="token punctuation">(</span>position<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>

  <span class="token function">update</span><span class="token punctuation">(</span>position<span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">,</span> value<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> position <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
    
    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head 
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> position <span class="token operator">&amp;&amp;</span> current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
      index<span class="token operator">++</span>
    <span class="token punctuation">}</span> 
    current<span class="token operator">!</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> linkedList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;ccc&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;ddd&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// aaa-&gt;bbb-&gt;ccc-&gt;ddd</span>
linkedList<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&#39;cba&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// aaa-&gt;bbb-&gt;cba-&gt;ccc-&gt;ddd</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">removeAt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// aaa-&gt;bbb-&gt;-&gt;ccc-&gt;ddd</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// aaa</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// bbb</span>

linkedList<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;yyy&#39;</span><span class="token punctuation">)</span>
linkedList<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// xxx-&gt;bbb-&gt;yyy-&gt;ddd</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br></div></div><ol start="2"><li><code>indexOf(value)</code> \u6839\u636E\u503C\u83B7\u53D6\u7D22\u5F15\u503C</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>  <span class="token comment">// \u83B7\u53D6\u7D22\u5F15\u503C</span>
  <span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">{</span> 
    <span class="token comment">// \u4ECE\u7B2C\u4E00\u4E2A\u8282\u70B9\u5F00\u59CB\u904D\u5386 , \u5224\u65AD current.value \u662F\u5426\u7B49\u4E8E value</span>
    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>value <span class="token operator">===</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> index
      <span class="token punctuation">}</span>
      current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
      index<span class="token operator">++</span> 
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ol start="3"><li><code>remove(value)</code> \u6839\u636E\u5143\u7D20\u5220\u9664\u67D0\u4E00\u9879</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">remove</span><span class="token punctuation">(</span>value<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeAt</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="4"><li><code>isEmpty()</code> \u662F\u5426\u4E3A\u7A7A</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u9762\u8BD5\u9898-\u5220\u9664\u94FE\u8868\u4E2D\u7684\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u9762\u8BD5\u9898-\u5220\u9664\u94FE\u8868\u4E2D\u7684\u8282\u70B9" aria-hidden="true">#</a> \u9762\u8BD5\u9898 - \u5220\u9664\u94FE\u8868\u4E2D\u7684\u8282\u70B9</h3><p><img src="`+N+'" alt="\u56FE\u7247"><img src="'+_+`" alt="\u56FE\u7247"><strong>\u89E3\u9898\u65B9\u6CD5: \u8BA9 5 \u7684 value \u7B49\u4E8E 1, \u8BA9 5 \u8282\u70B9\u7684 next \u6307\u5411 9</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">deleteNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span>ListNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>
  node<span class="token operator">!</span><span class="token punctuation">.</span>value <span class="token operator">=</span> node<span class="token operator">!</span><span class="token punctuation">.</span>next<span class="token operator">!</span><span class="token punctuation">.</span>val
  node<span class="token operator">!</span><span class="token punctuation">.</span>next  <span class="token operator">=</span> node<span class="token operator">!</span><span class="token punctuation">.</span>next<span class="token operator">!</span><span class="token punctuation">.</span>next
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u9762\u8BD5\u9898-\u53CD\u8F6C\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u9762\u8BD5\u9898-\u53CD\u8F6C\u94FE\u8868" aria-hidden="true">#</a> \u9762\u8BD5\u9898 - \u53CD\u8F6C\u94FE\u8868</h3>`,129),A={href:"https://leetcode.cn/problems/reverse-linked-list/",target:"_blank",rel:"noopener noreferrer"},E=r("https://leetcode.cn/problems/reverse-linked-list/"),H=s('<p><img src="'+z+`" alt="\u56FE\u7247"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">ListNode</span> <span class="token punctuation">{</span>
  val<span class="token operator">:</span> <span class="token builtin">number</span>
  next<span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>val<span class="token operator">?</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">,</span> next<span class="token operator">?</span><span class="token operator">:</span>ListNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> val
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> next 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">reverseList</span><span class="token punctuation">(</span>head<span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
  <span class="token operator">??</span><span class="token operator">?</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="\u89E3\u6CD51-\u6808\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD51-\u6808\u7ED3\u6784" aria-hidden="true">#</a> \u89E3\u6CD51 : \u6808\u7ED3\u6784</h3><p>\u5229\u7528\u4E86 <strong>\u6808</strong> \u6765\u5B9E\u73B0\u53CD\u8F6C</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">reverseList</span><span class="token punctuation">(</span>head<span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4EC0\u4E48\u60C5\u51B5\u94FE\u8868\u4E0D\u9700\u8981\u5904\u7406</span>
  <span class="token comment">// 1. head \u672C\u8EAB\u4E3A null \u7684\u60C5\u51B5</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>
  <span class="token comment">// 2. \u53EA\u6709 head \u4E00\u4E2A\u8282\u70B9</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>head<span class="token punctuation">.</span>next <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> head
  
  <span class="token comment">// \u4F7F\u7528\u6570\u7EC4\u6A21\u62DF\u6808\u7ED3\u6784</span>
  <span class="token keyword">const</span> stack<span class="token operator">:</span>ListNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> 
  <span class="token keyword">let</span> current <span class="token operator">=</span> head
  <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span>
    current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token operator">!</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> newHead<span class="token operator">:</span> ListNode <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span>
  <span class="token keyword">let</span> newHeadCurrent <span class="token operator">=</span> newHead
  <span class="token keyword">while</span> <span class="token punctuation">(</span>stack<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> node <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span>
    newHeadCurrent<span class="token punctuation">.</span>next <span class="token operator">=</span> node 
    newHeadCurrent <span class="token operator">=</span> newHeadCurrent<span class="token punctuation">.</span>next
  <span class="token punctuation">}</span>
  newHeadCurrent<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>   <span class="token comment">// \u7EC8\u6B62\u4E86\u73AF\u5F15\u7528(\u753B\u56FE\u4F1A\u5F88\u6E05\u6670)</span>
  <span class="token keyword">return</span>  newHead
<span class="token punctuation">}</span>

<span class="token keyword">const</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
head<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
head<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> newHead <span class="token operator">=</span> <span class="token function">reverseList</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span>
<span class="token keyword">let</span> current <span class="token operator">=</span> newHead
<span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
  current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token operator">!</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="\u89E3\u6CD5-2-\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-2-\u5FAA\u73AF" aria-hidden="true">#</a> \u89E3\u6CD5 2 : \u5FAA\u73AF</h3><p><img src="`+q+`" alt="\u56FE\u7247"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">reverseList</span><span class="token punctuation">(</span>head<span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4EC0\u4E48\u60C5\u51B5\u94FE\u8868\u4E0D\u9700\u8981\u5904\u7406</span>
  <span class="token comment">// 1. head \u672C\u8EAB\u4E3A null \u7684\u60C5\u51B5 \u6216\u8005 \u53EA\u6709\u4E00\u4E2A\u8282\u70B9, \u76F4\u63A5\u8FD4\u56DE head</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> head<span class="token punctuation">.</span>next <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> head
  
  <span class="token comment">// 2. \u53CD\u8F6C\u94FE\u8868\u7ED3\u6784</span>
  <span class="token keyword">let</span> newHead<span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> current<span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> head<span class="token punctuation">.</span>next
    head<span class="token punctuation">.</span>next <span class="token operator">=</span> newHead
    newHead <span class="token operator">=</span> head
    head <span class="token operator">=</span> current
  <span class="token punctuation">}</span> 
  <span class="token keyword">return</span> newHead
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,8);function S(I,V){const a=t("ExternalLinkIcon");return e(),o(l,null,[B,n("p",null,[n("a",A,[E,c(a)])]),H],64)}var C=p(j,[["render",S],["__file","start.html.vue"]]);export{C as default};
