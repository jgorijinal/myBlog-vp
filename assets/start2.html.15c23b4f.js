import{_ as n,d as s}from"./app.fcb85f29.js";var a="/myBlog-vp/assets/erfen1.fcd9b303.png",p="/myBlog-vp/assets/chashi1.f81f1ae7.png",t="/myBlog-vp/assets/dao1.0c542803.png",e="/myBlog-vp/assets/hanjie1.8853f126.png",o="/myBlog-vp/assets/dao2.ec97b61f.png",c="/myBlog-vp/assets/kjf1.3bec0403.png",l="/myBlog-vp/assets/shuzulianbiao1.92e21a0b.png",r="/myBlog-vp/assets/hab1.c6fd4a6f.png",u="/myBlog-vp/assets/kuorong1.b015450c.png",i="/myBlog-vp/assets/kuorongzhi1.27c47007.png";const k={},b=s(`<h1 id="\u5927o\u8868\u793A\u6CD5-\u54C8\u5E0C\u8868" tabindex="-1"><a class="header-anchor" href="#\u5927o\u8868\u793A\u6CD5-\u54C8\u5E0C\u8868" aria-hidden="true">#</a> \u5927O\u8868\u793A\u6CD5, \u54C8\u5E0C\u8868</h1><h2 id="\u7B97\u6CD5\u590D\u6742\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u590D\u6742\u5EA6" aria-hidden="true">#</a> \u7B97\u6CD5\u590D\u6742\u5EA6</h2><p>\u5148\u6BD4\u8F83\u4E24\u79CD\u4E0D\u540C\u7684\u7B97\u6CD5, \u5728\u67E5\u627E\u6570\u7EC4\u4E2D(\u6709\u5E8F\u6570\u7EC4)\u7ED9\u5B9A\u5143\u7D20\u7684\u65F6\u95F4\u590D\u6742\u5EA6</p><p><strong>\u65B9\u5F0F\u4E00: \u987A\u5E8F\u67E5\u627E</strong></p><ul><li>\u8FD9\u79CD\u7B97\u6CD5<strong>\u4ECE\u5934\u5230\u5C3E\u904D\u5386\u6574\u4E2A\u6570\u7EC4</strong>, \u4F9D\u6B21<strong>\u6BD4\u8F83\u6BCF\u4E2A\u5143\u7D20\u548C\u7ED9\u5B9A\u5143\u7D20\u7684\u503C</strong></li><li>\u5982\u679C<strong>\u627E\u5230\u76F8\u7B49\u7684\u5143\u7D20, \u5C31\u4F1A\u8FD4\u56DE\u4E0B\u6807</strong>, \u5982\u679C<strong>\u904D\u5386\u6574\u4E2A\u6570\u7EC4\u90FD\u6CA1\u627E\u5230, \u5C31\u8FD4\u56DE -1</strong></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u987A\u5E8F\u67E5\u627E</span>
<span class="token keyword">function</span> <span class="token function">sequentSearch</span><span class="token punctuation">(</span>arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span>  <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> item <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">===</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> i
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>\u65B9\u5F0F\u4E8C: \u4E8C\u5206\u67E5\u627E</strong></p><ul><li>\u8FD9\u79CD\u7B97\u6CD5<strong>\u5047\u8BBE\u6570\u7EC4\u662F\u6709\u5E8F</strong>\u7684, \u6BCF\u6B21<strong>\u9009\u62E9\u6570\u7EC4\u4E2D\u95F4\u7684\u5143\u7D20\u4E0E\u7ED9\u5B9A\u5143\u7D20\u8FDB\u884C\u6BD4\u8F83</strong></li><li>\u5982\u679C<strong>\u76F8\u7B49, \u5C31\u8FD4\u56DE\u5176\u4E0B\u6807</strong>, <strong>\u5982\u679C\u7ED9\u5B9A\u5143\u7D20\u6BD4\u4E2D\u95F4\u5143\u7D20\u5C0F, \u5219\u5728\u6570\u7EC4\u7684\u5DE6\u534A\u90E8\u5206\u8FDB\u884C\u67E5\u627E</strong></li><li>\u5982\u679C<strong>\u7ED9\u5B9A\u5143\u7D20\u6BD4\u4E2D\u95F4\u5143\u7D20\u5927</strong>, <strong>\u5219\u5728\u6570\u7EC4\u7684\u53F3\u534A\u90E8\u5206\u8FDB\u884C\u67E5\u627E</strong></li><li>\u8FD9\u6837<strong>\u6BCF\u6B21\u67E5\u627E\u90FD\u4F1A\u8BA9\u67E5\u627E\u7684\u8FD4\u56DE\u51CF\u534A, \u76F4\u5230\u627E\u5230\u76F8\u7B49\u7684\u5143\u7D20\u6216\u8005\u67E5\u627E\u7684\u8303\u56F4\u4E3A\u7A7A</strong><img src="`+a+`" alt="\u56FE\u7247"></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4E8C\u5206\u67E5\u627E</span>
<span class="token keyword">function</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">,</span> num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5B9A\u4E49\u5DE6\u8FB9\u7684\u7D22\u5F15</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token comment">// \u5B9A\u4E49\u53F3\u8FB9\u7684\u7D22\u5F15</span>
  <span class="token keyword">let</span> right <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E2D\u95F4\u7684\u7D22\u5F15</span>
    <span class="token keyword">let</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">+</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> midNum <span class="token operator">=</span> arr<span class="token punctuation">[</span>mid<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>midNum <span class="token operator">===</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> mid
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>midNum <span class="token operator">&lt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      right <span class="token operator">=</span> right <span class="token operator">-</span> <span class="token number">1</span>
    <span class="token punctuation">}</span> 
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p><strong>\u8BA1\u7B97\u6D88\u8017\u65F6\u95F4\u6D4B\u8BD5\u4EE3\u7801:</strong><img src="`+p+'" alt="\u56FE\u7247"></p><h2 id="\u5927o-\u8868\u793A\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5927o-\u8868\u793A\u6CD5" aria-hidden="true">#</a> \u5927O \u8868\u793A\u6CD5</h2><p><img src="'+t+'" alt="\u56FE\u7247"></p><h3 id="\u5E38\u89C1\u7684\u5BF9\u6570\u9636" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C1\u7684\u5BF9\u6570\u9636" aria-hidden="true">#</a> \u5E38\u89C1\u7684\u5BF9\u6570\u9636</h3><p><img src="'+e+'" alt="\u56FE\u7247"><img src="'+o+'" alt="\u56FE\u7247"></p><h3 id="\u7A7A\u95F4\u590D\u6742\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u7A7A\u95F4\u590D\u6742\u5EA6" aria-hidden="true">#</a> \u7A7A\u95F4\u590D\u6742\u5EA6</h3><p><strong>\u7A7A\u95F4\u590D\u6742\u5EA6\u6307\u7684\u662F\u7A0B\u5E8F\u8FD0\u884C\u8FC7\u7A0B\u4E2D,\u6240\u9700\u8981\u7684\u5916\u7684\u5B58\u50A8\u7A7A\u95F4</strong></p><ul><li>\u7A7A\u95F4\u590D\u6742\u5EA6<strong>\u53EF\u4EE5\u7528 \u5927O \u8868\u793A\u6CD5\u6765\u8868\u793A</strong></li><li><strong>\u7A7A\u95F4\u590D\u6742\u5EA6\u7684\u8BA1\u7B97\u65B9\u6CD5\u4E0E\u65F6\u95F4\u590D\u6742\u5EA6\u7C7B\u4F3C</strong>,\u901A\u5E38\u9700\u8981\u5206\u6790\u7A0B\u5E8F\u4E2D\u9700\u8981<strong>\u989D\u5916\u5206\u914D\u7684\u5185\u5B58\u7A7A\u95F4, \u5982\u6570\u7EC4, \u53D8\u91CF, \u5BF9\u8C61, \u9012\u5F52\u8C03\u7528</strong>\u7B49 <img src="'+c+'" alt="\u56FE\u7247"></li></ul><h3 id="\u6570\u7EC4\u548C\u94FE\u8868\u7684\u590D\u6742\u5EA6\u5BF9\u6BD4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u548C\u94FE\u8868\u7684\u590D\u6742\u5EA6\u5BF9\u6BD4" aria-hidden="true">#</a> \u6570\u7EC4\u548C\u94FE\u8868\u7684\u590D\u6742\u5EA6\u5BF9\u6BD4</h3><p><strong>\u4F7F\u7528 \u5927O\u8868\u793A\u6CD5 \u6765\u5BF9\u6BD4\u6570\u7EC4\u548C\u94FE\u8868\u7684\u65F6\u95F4\u590D\u6742\u5EA6</strong><img src="'+l+'" alt="\u56FE\u7247"></p><p><strong>\u6570\u7EC4\u662F\u4E00\u79CD\u8FDE\u7EED\u7684\u5B58\u50A8\u7ED3\u6784, \u901A\u8FC7\u4E0B\u6807\u53EF\u4EE5\u76F4\u63A5\u8BBF\u95EE\u6570\u7EC4\u4E2D\u7684\u4EFB\u610F\u5143\u7D20</strong></p><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6: \u5BF9\u4E8E\u6570\u7EC4, \u968F\u673A\u8BBF\u95EE\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u662F <code>O(1)</code> , \u63D2\u5165\u548C\u5220\u9664\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u662F <code>O(n)</code></li><li>\u7A7A\u95F4\u590D\u6742\u5EA6: \u6570\u7EC4\u9700\u8981\u8FDE\u7EED\u7684\u5B58\u50A8\u7A7A\u95F4, \u7A7A\u95F4\u590D\u6742\u5EA6\u662F <code>O(n)</code></li></ul><p><strong>\u94FE\u8868\u662F\u4E00\u79CD\u94FE\u5F0F\u5B58\u50A8\u7ED3\u6784, \u901A\u8FC7\u6307\u9488\u8FDE\u63A5\u8D77\u6765\u7684\u8282\u70B9\u7EC4\u6210, \u8BBF\u95EE\u4FE9\u8868\u4E2D\u5143\u7D20\u9700\u8981\u4ECE\u5934\u8282\u70B9\u5F00\u59CB\u904D\u5386</strong></p><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6 : \u5BF9\u4E8E\u94FE\u8868, \u968F\u673A\u8BBF\u95EE\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u662F <code>O(n)</code>, \u63D2\u5165\u548C\u5220\u9664\u64CD\u4F5C\u65F6\u95F4\u590D\u6742\u5EA6\u662F <code>O(1)</code></li><li>\u7A7A\u95F4\u590D\u6742\u5EA6 : \u94FE\u8868\u9700\u8981\u4E3A\u6BCF\u4E2A\u8282\u70B9\u5206\u914D\u5B58\u50A8\u7A7A\u95F4, \u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A <code>O(n)</code></li></ul><h2 id="\u54C8\u5E0C\u8868-hashtable" tabindex="-1"><a class="header-anchor" href="#\u54C8\u5E0C\u8868-hashtable" aria-hidden="true">#</a> \u54C8\u5E0C\u8868 HashTable</h2><p>\u54C8\u5E0C\u8868\u901A\u5E38\u662F\u57FA\u4E8E<strong>\u6570\u7EC4</strong>\u6765\u5B9E\u73B0\u7684,\u4F46\u662F\u76F8\u5BF9\u4E8E\u6570\u7EC4, \u5B83\u6709\u5F88\u591A\u7684\u4F18\u52BF</p><ul><li>\u5B83\u53EF\u4EE5\u63D0\u4F9B\u975E\u5E38\u5FEB\u901F\u7684 <strong>\u63D2\u5165-\u5220\u9664-\u67E5\u627E \u64CD\u4F5C</strong></li><li>\u65E0\u8BBA\u662F\u591A\u5C11\u6570\u636E, \u63D2\u5165\u548C\u5220\u9664\u503C\u63A5\u8FD1\u4E8E\u5E38\u91CF\u7684\u65F6\u95F4, : O(1)\u7684\u65F6\u95F4\u590D\u6742\u5EA6, \u5B9E\u9645\u4E0A, \u53EA<strong>\u9700\u8981\u51E0\u4E2A\u673A\u5668\u6307\u4EE4</strong>\u624D\u53EF\u4EE5\u5B8C\u6210</li><li>\u54C8\u5E0C\u8868\u7684\u901F\u5EA6\u6BD4<strong>\u6811\u8FD8\u8981\u5FEB</strong>, \u57FA\u672C\u53EF\u4EE5\u77AC\u95F4\u67E5\u627E\u5230\u60F3\u8981\u7684\u5143\u7D20</li><li>\u54C8\u5E0C\u8868\u76F8\u5BF9\u4E8E\u6811\u6765\u8BF4\u7F16\u7801\u8981\u5BB9\u6613\u5F88\u591A</li></ul><p>\u54C8\u5E0C\u8868\u76F8\u5BF9\u4E8E\u6570\u7EC4\u7684\u4E00\u4E9B<strong>\u4E0D\u8DB3</strong></p><ul><li>\u54C8\u5E0C\u8868\u4E2D\u7684\u6570\u636E\u662F<strong>\u6CA1\u6709\u987A\u5E8F</strong>\u7684, \u6240\u4EE5\u4E0D\u80FD\u4EE5\u4E00\u79CD\u56FA\u5B9A\u7684\u65B9\u5F0F(\u6BD4\u5982\u4ECE\u5C0F\u5230\u5927), \u6765\u904D\u5386\u5176\u4E2D\u7684\u5143\u7D20(\u6CA1\u6709\u7279\u6B8A\u5904\u7406\u7684\u60C5\u51B5\u4E0B)</li><li>\u901A\u5E38\u60C5\u51B5\u4E0B, \u54C8\u5E0C\u8868\u4E2D\u7684 key \u503C\u662F<strong>\u4E0D\u5141\u8BB8\u91CD\u590D</strong>\u7684, \u4E0D\u80FD\u653E\u7F6E\u76F8\u540C\u7684 key, \u7528\u4E8E\u4FDD\u5B58\u4E0D\u540C\u7684\u5143\u7D20</li></ul><p><em>\u54C8\u5E0C\u8868, <strong>\u5B83\u7684\u7ED3\u6784\u662F\u6570\u7EC4</strong>, \u4F46\u662F\u5B83\u795E\u5947\u7684\u5730\u65B9\u5C31\u5728\u4E8E, \u5BF9\u6570\u7EC4<strong>\u4E0B\u6807\u503C\u7684\u4E00\u79CD\u53D8\u6362</strong>, \u8FD9\u79CD<strong>\u53D8\u6362</strong>\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528<strong>\u54C8\u5E0C\u51FD\u6570</strong>, \u901A\u8FC7\u54C8\u5E0C\u51FD\u6570\u53EF\u4EE5\u83B7\u53D6\u5230 <strong>HashCode</strong></em><img src="'+r+`" alt="\u56FE\u7247"></p><h3 id="\u54C8\u5E0C\u51FD\u6570\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u54C8\u5E0C\u51FD\u6570\u7684\u5B9E\u73B0" aria-hidden="true">#</a> \u54C8\u5E0C\u51FD\u6570\u7684\u5B9E\u73B0</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>\u54C8\u5E0C\u51FD\u6570
<span class="token doc-comment comment">/**
 * \u54C8\u5E0C\u51FD\u6570: \u5C06 key \u5B57\u7B26\u4E32\u6620\u5C04\u51FA\u6765\u7D22\u5F15\u503C
 * <span class="token keyword">@param</span> <span class="token parameter">key</span> \u8F6C\u6362\u6210 key
 * <span class="token keyword">@param</span> <span class="token parameter">max</span> \u6570\u7EC4\u7684\u957F\u5EA6(\u6700\u5927\u7684\u6570\u503C)
 * <span class="token keyword">@returns</span> \u7D22\u5F15\u503C
 */</span>
<span class="token keyword">function</span> <span class="token function">hashFunc</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> hashCode <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">const</span> length <span class="token operator">=</span> key<span class="token punctuation">.</span>length

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u970D\u7EB3\u6CD5\u5219\u8BA1\u7B97\u7684hashCode</span>
    hashCode <span class="token operator">=</span> <span class="token number">31</span> <span class="token operator">*</span> hashCode <span class="token operator">+</span> key<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4F59\u6570\u6C42\u51FA\u7D22\u5F15\u503C</span>
  <span class="token keyword">const</span> index <span class="token operator">=</span> hashCode <span class="token operator">%</span> max
  <span class="token keyword">return</span> index
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="\u54C8\u5E0C\u8868\u6574\u4F53\u7ED3\u6784\u548C\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#\u54C8\u5E0C\u8868\u6574\u4F53\u7ED3\u6784\u548C\u5C01\u88C5" aria-hidden="true">#</a> \u54C8\u5E0C\u8868\u6574\u4F53\u7ED3\u6784\u548C\u5C01\u88C5</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">HashTable<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u6570\u7EC4, \u7528\u6765\u5B58\u653E\u8FDE\u5730\u5740\u6CD5\u4E2D\u7684\u94FE(\u6570\u7EC4)</span>
  <span class="token keyword">private</span> storage<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5B9A\u4E49\u6570\u7EC4\u7684\u957F\u5EA6</span>
  <span class="token keyword">private</span> length<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">7</span>
  <span class="token comment">// \u8BB0\u5F55\u5DF2\u7ECF\u5B58\u653E\u5143\u7D20\u7684\u4E2A\u6570</span>
  <span class="token keyword">private</span> count<span class="token operator">:</span><span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> hashTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u63D2\u5165-\u4FEE\u6539\u6570\u636E-put" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165-\u4FEE\u6539\u6570\u636E-put" aria-hidden="true">#</a> \u63D2\u5165 &amp; \u4FEE\u6539\u6570\u636E put</h3><p><strong>\u54C8\u5E0C\u8868\u7684\u63D2\u5165\u548C\u4FEE\u6539\u662F\u540C\u4E00\u4E2A\u51FD\u6570</strong></p><ul><li>\u56E0\u4E3A, \u5F53\u4F7F\u7528\u8005\u4F20\u5165\u4E00\u4E2A <code>&lt;key, value&gt;</code> \u65F6</li><li>\u5982\u679C\u539F\u6765\u4E0D\u5B58\u5728\u8BE5 <code>key</code>, \u90A3\u4E48\u5C31\u662F\u63D2\u5165\u64CD\u4F5C</li><li>\u5982\u679C\u5DF2\u7ECF\u5B58\u5728\u8BE5 <code>key</code>, \u90A3\u4E48\u5C31\u662F\u4FEE\u6539\u64CD\u4F5C</li></ul><p>\u8FC7\u7A0B: \u7A0D\u5FAE\u590D\u6742\u4E00\u70B9</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// [[[key,value],[key,value],[key,value]], [[key,value], [key,value]], [[key,value]]]</span>
<span class="token keyword">class</span> <span class="token class-name">HashTable<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u6570\u7EC4, \u7528\u6765\u5B58\u653E\u8FDE\u5730\u5740\u6CD5\u4E2D\u7684\u94FE(\u6570\u7EC4)</span>
  <span class="token keyword">private</span> storage<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5B9A\u4E49\u6570\u7EC4\u7684\u957F\u5EA6</span>
  <span class="token keyword">private</span> length<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">7</span>
  <span class="token comment">// \u8BB0\u5F55\u5DF2\u7ECF\u5B58\u653E\u5143\u7D20\u7684\u4E2A\u6570</span>
  <span class="token keyword">private</span> count<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
  
  <span class="token keyword">private</span> <span class="token function">hashFunc</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> hashCode <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">const</span> length <span class="token operator">=</span> key<span class="token punctuation">.</span>length
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u970D\u7EB3\u6CD5\u5219\u8BA1\u7B97\u7684hashCode</span>
      hashCode <span class="token operator">=</span> <span class="token number">31</span> <span class="token operator">*</span> hashCode <span class="token operator">+</span> key<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6C42\u51FA\u7D22\u5F15\u503C</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> hashCode <span class="token operator">%</span> max
    <span class="token keyword">return</span> index
  <span class="token punctuation">}</span>


  <span class="token comment">// \u4FEE\u6539 / \u63D2\u5165 \u64CD\u4F5C</span>
  <span class="token function">put</span><span class="token punctuation">(</span>key <span class="token operator">:</span><span class="token builtin">string</span> <span class="token punctuation">,</span> value <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u7D22\u5F15</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hashFunc</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token comment">// \u53BB\u9664\u7D22\u5F15\u503C\u5BF9\u5E94\u672A\u77E5\u7684\u6570\u7EC4(\u4E5F\u53EF\u4EE5\u53EB\u505A&quot;\u6876&quot;)</span>
    <span class="token keyword">let</span> bucket <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token comment">// \u5224\u65AD bucket \u662F\u5426\u6709\u503C </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bucket <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      bucket <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> bucket
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5DF2\u7ECF\u786E\u5B9A\u4E86\u8FD9\u4E2A\u4F4D\u7F6E\u6709\u4E00\u4E2A\u6876(\u6570\u7EC4)\u4E86, \u4F46\u662F\u4E0D\u7F3A\u5B9A\u662F\u5426\u5B58\u5728\u5BF9\u5E94\u7684key</span>
    <span class="token keyword">let</span> isUpdated <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bucket<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> tuple <span class="token operator">=</span> bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">const</span> tupleKey <span class="token operator">=</span> tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>tupleKey <span class="token operator">===</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u66F4\u65B0(\u4FEE\u6539)\u7684\u64CD\u4F5C</span>
        tuple<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> value
        isUpdated <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5728\u4E0A\u9762\u4EE3\u7801\u4E2D\u7684 value \u6CA1\u6709\u88AB\u4FEE\u6539(\u8BF4\u660E\u6CA1\u6709\u5BF9\u5E94\u7684\u952E\u503C\u5BF9), \u90A3\u4E48\u5728\u8FD9\u91CC\u6267\u884C\u6DFB\u52A0\u64CD\u4F5C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isUpdated<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      bucket<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> hashTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><h3 id="\u83B7\u53D6\u5BF9\u5E94\u7684\u503C-get" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u5BF9\u5E94\u7684\u503C-get" aria-hidden="true">#</a> \u83B7\u53D6\u5BF9\u5E94\u7684\u503C get</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">HashTable<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u6570\u7EC4, \u7528\u6765\u5B58\u653E\u8FDE\u5730\u5740\u6CD5\u4E2D\u7684\u94FE(\u6570\u7EC4)</span>
  <span class="token keyword">private</span> storage<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5B9A\u4E49\u6570\u7EC4\u7684\u957F\u5EA6</span>
  <span class="token keyword">private</span> length<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">7</span>
  <span class="token comment">// \u8BB0\u5F55\u5DF2\u7ECF\u5B58\u653E\u5143\u7D20\u7684\u4E2A\u6570</span>
  <span class="token keyword">private</span> count<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
  
  <span class="token keyword">private</span> <span class="token function">hashFunc</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> hashCode <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">const</span> length <span class="token operator">=</span> key<span class="token punctuation">.</span>length
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u970D\u7EB3\u6CD5\u5219\u8BA1\u7B97\u7684hashCode</span>
      hashCode <span class="token operator">=</span> <span class="token number">31</span> <span class="token operator">*</span> hashCode <span class="token operator">+</span> key<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6C42\u51FA\u7D22\u5F15\u503C</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> hashCode <span class="token operator">%</span> max
    <span class="token keyword">return</span> index
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4FEE\u6539 / \u63D2\u5165 \u64CD\u4F5C</span>
  <span class="token function">put</span><span class="token punctuation">(</span>key <span class="token operator">:</span><span class="token builtin">string</span> <span class="token punctuation">,</span> value <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u83B7\u53D6\u503C</span>
  <span class="token function">get</span><span class="token punctuation">(</span>key<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6 \u7D22\u5F15\u503C</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hashFunc</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token comment">// \u83B7\u53D6 bucket \u6876</span>
    <span class="token keyword">const</span> bucket <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bucket<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">undefined</span>
    
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bucket<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">const</span> tuple <span class="token operator">=</span> bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">const</span> tupleKey <span class="token operator">=</span> tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> tupleKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> tuple<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> hashTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
hashTable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
hashTable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>
hashTable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hashTable<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 300</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h3 id="\u5220\u9664\u64CD\u4F5C-delete" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u64CD\u4F5C-delete" aria-hidden="true">#</a> \u5220\u9664\u64CD\u4F5C delete</h3><ul><li>\u6839\u636E\u5BF9\u5E94\u7684 <code>key</code>, \u5220\u9664\u5BF9\u5E94\u7684 <code>key \u548C value</code></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">HashTable<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u6570\u7EC4, \u7528\u6765\u5B58\u653E\u8FDE\u5730\u5740\u6CD5\u4E2D\u7684\u94FE(\u6570\u7EC4)</span>
  <span class="token keyword">private</span> storage<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5B9A\u4E49\u6570\u7EC4\u7684\u957F\u5EA6</span>
  <span class="token keyword">private</span> length<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">7</span>
  <span class="token comment">// \u8BB0\u5F55\u5DF2\u7ECF\u5B58\u653E\u5143\u7D20\u7684\u4E2A\u6570</span>
  <span class="token keyword">private</span> count<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
  
  <span class="token keyword">private</span> <span class="token function">hashFunc</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> hashCode <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">const</span> length <span class="token operator">=</span> key<span class="token punctuation">.</span>length
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u970D\u7EB3\u6CD5\u5219\u8BA1\u7B97\u7684hashCode</span>
      hashCode <span class="token operator">=</span> <span class="token number">31</span> <span class="token operator">*</span> hashCode <span class="token operator">+</span> key<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6C42\u51FA\u7D22\u5F15\u503C</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> hashCode <span class="token operator">%</span> max
    <span class="token keyword">return</span> index
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4FEE\u6539 / \u63D2\u5165 \u64CD\u4F5C</span>
  <span class="token function">put</span><span class="token punctuation">(</span>key <span class="token operator">:</span><span class="token builtin">string</span> <span class="token punctuation">,</span> value <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u83B7\u53D6\u503C</span>
  <span class="token function">get</span><span class="token punctuation">(</span>key<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5220\u9664\u6570\u636E delete</span>
  <span class="token keyword">delete</span><span class="token punctuation">(</span>key<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6839\u636E key \u83B7\u53D6\u7D22\u5F15\u503C</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hashFunc</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>

    <span class="token comment">// \u83B7\u53D6 bucket \u6876</span>
    <span class="token keyword">const</span> bucket <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bucket<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">undefined</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bucket<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> tuple <span class="token operator">=</span> bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">const</span> tupleKey <span class="token operator">=</span> tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      <span class="token keyword">const</span> tupleValue <span class="token operator">=</span> tuple<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> tupleKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucket<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">--</span>
        <span class="token keyword">return</span> tupleValue
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> hashTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
hashTable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
hashTable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>
hashTable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hashTable<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 300</span>

hashTable<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hashTable<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><h3 id="\u81EA\u52A8\u6269\u5BB9\u548C\u7F29\u5BB9\u7684\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u81EA\u52A8\u6269\u5BB9\u548C\u7F29\u5BB9\u7684\u64CD\u4F5C" aria-hidden="true">#</a> \u81EA\u52A8\u6269\u5BB9\u548C\u7F29\u5BB9\u7684\u64CD\u4F5C</h3><p><img src="`+u+`" alt="\u56FE\u7247"></p><p><strong>\u6269\u5BB9\u51FD\u6570</strong>:</p><ul><li>\u6B65\u9AA4\u4E00: \u5148\u5C06\u4E4B\u524D\u7684\u6570\u7EC4\u4FDD\u5B58\u8D77\u6765, \u56E0\u4E3A\u6211\u4EEC\u5F85\u4F1A\u513F\u4F1A\u5C06<code>storage = []</code></li><li>\u6B65\u9AA4\u4E8C: \u4E4B\u524D\u7684\u5C5E\u6027\u503C\u9700\u8981\u91CD\u7F6E</li><li>\u6B65\u9AA4\u4E09: \u904D\u5386\u6240\u6709\u7684\u6570\u636E\u9879, \u91CD\u65B0\u63D2\u5165\u5230\u54C8\u5E0C\u8868\u4E2D</li></ul><p>\u5728\u4EC0\u4E48\u65F6\u5019\u8C03\u7528\u6269\u5BB9\u65B9\u6CD5\u5462?</p><ul><li>\u5728\u6BCF\u6B21\u6DFB\u52A0\u5B8C\u65B0\u7684\u6570\u636E\u65F6(\u4E5F\u5C31\u662F put \u65B9\u6CD5), \u90FD\u8FDB\u884C\u5224\u65AD</li></ul><p>\u5F53\u7136 \u7F29\u5BB9 \u65B9\u6CD5\u4E0E\u4E4B\u76F8\u53CD</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">HashTable<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u6570\u7EC4, \u7528\u6765\u5B58\u653E\u8FDE\u5730\u5740\u6CD5\u4E2D\u7684\u94FE(\u6570\u7EC4)</span>
  <span class="token keyword">private</span> storage<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5B9A\u4E49\u6570\u7EC4\u7684\u957F\u5EA6</span>
  <span class="token keyword">private</span> length<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">7</span>
  <span class="token comment">// \u8BB0\u5F55\u5DF2\u7ECF\u5B58\u653E\u5143\u7D20\u7684\u4E2A\u6570</span>
  <span class="token keyword">private</span> count<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
  
  <span class="token keyword">private</span> <span class="token function">hashFunc</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> hashCode <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">const</span> length <span class="token operator">=</span> key<span class="token punctuation">.</span>length
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u970D\u7EB3\u6CD5\u5219\u8BA1\u7B97\u7684hashCode</span>
      hashCode <span class="token operator">=</span> <span class="token number">31</span> <span class="token operator">*</span> hashCode <span class="token operator">+</span> key<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6C42\u51FA\u7D22\u5F15\u503C</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> hashCode <span class="token operator">%</span> max
    <span class="token keyword">return</span> index
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6269\u5BB9/\u7F29\u5BB9</span>
  <span class="token keyword">private</span> <span class="token function">resize</span><span class="token punctuation">(</span>newLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BBE\u7F6E\u65B0\u7684\u957F\u5EA6</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">=</span> newLength
    <span class="token keyword">const</span> oldStorage <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage
    <span class="token comment">// \u5BF9\u6570\u636E\u8FDB\u884C\u521D\u59CB\u5316\u64CD\u4F5C</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>storage <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">// \u83B7\u53D6\u539F\u6765\u7684 bucket , \u653E\u5165\u65B0\u7684\u6570\u7EC4\u4E2D</span>
    oldStorage<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>bucket <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bucket<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> tuple <span class="token operator">=</span> bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tuple<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4FEE\u6539 / \u63D2\u5165 \u64CD\u4F5C</span>
  <span class="token function">put</span><span class="token punctuation">(</span>key <span class="token operator">:</span><span class="token builtin">string</span> <span class="token punctuation">,</span> value <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u7D22\u5F15</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hashFunc</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token comment">// \u53BB\u9664\u7D22\u5F15\u503C\u5BF9\u5E94\u672A\u77E5\u7684\u6570\u7EC4(\u4E5F\u53EF\u4EE5\u53EB\u505A&quot;\u6876&quot;)</span>
    <span class="token keyword">let</span> bucket <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token comment">// \u5224\u65AD bucket \u662F\u5426\u6709\u503C </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bucket <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      bucket <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> bucket
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5DF2\u7ECF\u786E\u5B9A\u4E86\u8FD9\u4E2A\u4F4D\u7F6E\u6709\u4E00\u4E2A\u6876(\u6570\u7EC4)\u4E86, \u4F46\u662F\u4E0D\u7F3A\u5B9A\u662F\u5426\u5B58\u5728\u5BF9\u5E94\u7684key</span>
    <span class="token keyword">let</span> isUpdated <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bucket<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> tuple <span class="token operator">=</span> bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">const</span> tupleKey <span class="token operator">=</span> tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>tupleKey <span class="token operator">===</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u66F4\u65B0(\u4FEE\u6539)\u7684\u64CD\u4F5C</span>
        tuple<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> value
        isUpdated <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5728\u4E0A\u9762\u4EE3\u7801\u4E2D\u7684 value \u6CA1\u6709\u88AB\u4FEE\u6539(\u8BF4\u660E\u6CA1\u6709\u5BF9\u5E94\u7684\u952E\u503C\u5BF9), \u90A3\u4E48\u5728\u8FD9\u91CC\u6267\u884C\u6DFB\u52A0\u64CD\u4F5C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isUpdated<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      bucket<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span>
      <span class="token comment">// \u53D1\u73B0 loadFactor \u6BD4\u4F8B\u5927\u4E8E 0.75 , \u90A3\u4E48\u5C31\u76F4\u63A5\u6269\u5BB9</span>
      <span class="token keyword">const</span> loadFactor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length
      <span class="token keyword">if</span> <span class="token punctuation">(</span>loadFactor <span class="token operator">&gt;</span> <span class="token number">0.75</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u83B7\u53D6\u503C</span>
  <span class="token function">get</span><span class="token punctuation">(</span>key<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5220\u9664\u6570\u636E</span>
   <span class="token keyword">delete</span><span class="token punctuation">(</span>key<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6839\u636E key \u83B7\u53D6\u7D22\u5F15\u503C</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hashFunc</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>

    <span class="token comment">// \u83B7\u53D6 bucket \u6876</span>
    <span class="token keyword">const</span> bucket <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bucket<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">undefined</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bucket<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> tuple <span class="token operator">=</span> bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">const</span> tupleKey <span class="token operator">=</span> tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      <span class="token keyword">const</span> tupleValue <span class="token operator">=</span> tuple<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> tupleKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucket<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">--</span>
        <span class="token comment">// \u5982\u679C loadFactor \u5C0F\u4E8E 0.25 , \u4E14\u6700\u5C0F\u957F\u5EA6\u4E3A 7 \u7684\u60C5\u51B5\u4E0B, \u53EF\u4EE5\u7F29\u5BB9</span>
        <span class="token keyword">const</span> loadFactor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length
        <span class="token keyword">if</span> <span class="token punctuation">(</span>loadFactor <span class="token operator">&lt;</span> <span class="token number">0.25</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> tupleValue
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> hashTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br></div></div><h3 id="\u5224\u65AD\u6570\u5B57\u662F\u4E0D\u662F\u8D28\u6570\u7684\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u6570\u5B57\u662F\u4E0D\u662F\u8D28\u6570\u7684\u5C01\u88C5" aria-hidden="true">#</a> \u5224\u65AD\u6570\u5B57\u662F\u4E0D\u662F\u8D28\u6570\u7684\u5C01\u88C5</h3><p>\u5BB9\u91CF\u6700\u597D\u662F<strong>\u8D28\u6570</strong></p><ul><li>\u867D\u7136\u5728\u94FE\u5730\u5740\u6CD5\u4E2D\u5C06\u5BB9\u91CF\u8BBE\u7F6E\u4E3A\u8D28\u6570, \u6CA1\u6709\u5728\u5F00\u653E\u5730\u5740\u6CD5\u4E2D\u91CD\u8981</li><li>\u4F46\u662F\u5176\u5B9E\u5728\u94FE\u5730\u5740\u6CD5\u4E2D\u8D28\u6570\u4F5C\u4E3A\u5BB9\u91CF\u6709\u5229\u4E8E\u6570\u636E\u7684\u5747\u5300\u5206\u5E03, \u6240\u4EE5\u5B8C\u6210\u4E0B\u4E00\u4E2A\u6B65\u9AA4</li></ul><p>\u5148\u505A\u4E00\u4E0B\u9762\u8BD5\u9898, <strong>\u5224\u65AD\u4E00\u4E2A\u6570\u662F\u4E0D\u662F\u8D28\u6570</strong></p><p>\u8D28\u6570\u7684\u7279\u70B9:</p><ol><li>\u8D28\u6570\u4E5F\u79F0\u4E3A<strong>\u7D20\u6570</strong></li><li>\u8D28\u6570\u8868\u793A\u5927\u4E8E 1 \u7684\u81EA\u7136\u6570\u4E2D , <strong>\u53EA\u80FD\u88AB 1 \u548C\u81EA\u5DF1\u6574\u9664\u7684\u6570</strong></li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5E38\u89C1\u9762\u8BD5\u9898 : \u5224\u65AD\u4E00\u4E2A\u6570\u662F\u4E0D\u662F\u8D28\u6570 </span>
<span class="token keyword">function</span> <span class="token function">isPrime</span><span class="token punctuation">(</span>num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u63BA\u5165\u7684\u662F 8</span>
  <span class="token comment">// \u9700\u8981\u5224\u65AD\u662F\u5426\u80FD\u591F\u88AB 2-7 \u6574\u9664</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">%</span> i <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 2-7 \u90FD\u4FBF\u5229\u5B8C\u6210\u540E, \u4F9D\u7136\u662F\u6CA1\u6709\u8FD4\u56DE false</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E0A\u9762\u4EE3\u7801\u505A\u4E00\u4E0B\u4F18\u5316</span>
<span class="token keyword">function</span> <span class="token function">isPrime</span><span class="token punctuation">(</span>num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5176\u5B9E\u53EF\u4EE5\u53EA\u8DDF\u5E73\u65B9\u6839\u6BD4\u8F83</span>
  <span class="token keyword">const</span> sqrt <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> sqrt<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">%</span> i <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="\u5BB9\u91CF\u8D28\u6570\u83B7\u53D6\u7684\u4EE3\u7801\u91CD\u6784" tabindex="-1"><a class="header-anchor" href="#\u5BB9\u91CF\u8D28\u6570\u83B7\u53D6\u7684\u4EE3\u7801\u91CD\u6784" aria-hidden="true">#</a> \u5BB9\u91CF\u8D28\u6570\u83B7\u53D6\u7684\u4EE3\u7801\u91CD\u6784</h3><p><img src="`+i+`" alt="\u56FE\u7247"></p><p><strong>\u5C01\u88C5\u83B7\u53D6\u65B0\u7684\u5BB9\u91CF\u8D28\u6570\u7684\u4EE3\u7801</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">HashTable<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u6570\u7EC4, \u7528\u6765\u5B58\u653E\u8FDE\u5730\u5740\u6CD5\u4E2D\u7684\u94FE(\u6570\u7EC4)</span>
  <span class="token keyword">private</span> storage<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5B9A\u4E49\u6570\u7EC4\u7684\u957F\u5EA6</span>
  <span class="token keyword">private</span> length<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">7</span>
  <span class="token comment">// \u8BB0\u5F55\u5DF2\u7ECF\u5B58\u653E\u5143\u7D20\u7684\u4E2A\u6570</span>
  <span class="token keyword">private</span> count<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>
  
  <span class="token keyword">private</span> <span class="token function">hashFunc</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> hashCode <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">const</span> length <span class="token operator">=</span> key<span class="token punctuation">.</span>length
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u970D\u7EB3\u6CD5\u5219\u8BA1\u7B97\u7684hashCode</span>
      hashCode <span class="token operator">=</span> <span class="token number">31</span> <span class="token operator">*</span> hashCode <span class="token operator">+</span> key<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6C42\u51FA\u7D22\u5F15\u503C</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> hashCode <span class="token operator">%</span> max
    <span class="token keyword">return</span> index
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5224\u65AD\u662F\u4E0D\u662F\u8D28\u6570</span>
  <span class="token keyword">private</span> <span class="token function">isPrime</span><span class="token punctuation">(</span>num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u63BA\u5165\u7684\u662F 8</span>
    <span class="token comment">// \u5176\u5B9E\u53EF\u4EE5\u53EA\u8DDF\u5E73\u65B9\u6839\u6BD4\u8F83</span>
    <span class="token keyword">const</span> sqrt <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> sqrt<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">%</span> i <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 2-7 \u90FD\u4FBF\u5229\u5B8C\u6210\u540E, \u4F9D\u7136\u662F\u6CA1\u6709\u8FD4\u56DE false</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u83B7\u53D6\u65B0\u7684\u8D28\u6570</span>
  <span class="token keyword">private</span> <span class="token function">getNextPrime</span><span class="token punctuation">(</span>num<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> newPrime <span class="token operator">=</span> num
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isPrime</span><span class="token punctuation">(</span>newPrime<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      newPrime<span class="token operator">++</span>  <span class="token comment">// \u5982\u679C\u4E0D\u662F\u8D28\u6570, \u5C31\u4E00\u76F4 ++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> newPrime
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6269\u5BB9/\u7F29\u5BB9</span>
  <span class="token keyword">private</span> <span class="token function">resize</span><span class="token punctuation">(</span>newLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BBE\u7F6E\u65B0\u7684\u957F\u5EA6</span>
    <span class="token keyword">let</span> newPrime <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNextPrime</span><span class="token punctuation">(</span>newLength<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>newPrime <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">)</span> newPrime <span class="token operator">=</span> <span class="token number">7</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">=</span>  newPrime

    <span class="token keyword">const</span> oldStorage <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage
    <span class="token comment">// \u5BF9\u6570\u636E\u8FDB\u884C\u521D\u59CB\u5316\u64CD\u4F5C</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>storage <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">// \u83B7\u53D6\u539F\u6765\u7684 bucket , \u653E\u5165\u65B0\u7684\u6570\u7EC4\u4E2D</span>
    oldStorage<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>bucket <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bucket<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> tuple <span class="token operator">=</span> bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tuple<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token operator">...</span>
  <span class="token operator">...</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div>`,62);function m(d,h){return b}var y=n(k,[["render",m],["__file","start2.html.vue"]]);export{y as default};
