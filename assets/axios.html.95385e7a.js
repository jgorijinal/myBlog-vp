import{_ as t,r as e,o,c,a as n,e as p,F as l,b as s,d as r}from"./app.fcb85f29.js";var u="/myBlog-vp/assets/request.08b47a45.png",i="/myBlog-vp/assets/response.ca80de25.png";const k={},b=n("h1",{id:"axios\u7ED3\u5408typescript",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#axios\u7ED3\u5408typescript","aria-hidden":"true"},"#"),s(" Axios\u7ED3\u5408Typescript")],-1),m={href:"https://github.com/axios/axios",target:"_blank",rel:"noopener noreferrer"},d=s("axios\u6587\u6863"),g={href:"https://axios-http.com/zh/docs/instance",target:"_blank",rel:"noopener noreferrer"},h=s("\u4E2D\u6587\u6587\u6863"),y=r(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> axios
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="\u5C01\u88C5axios\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u5C01\u88C5axios\u8BF7\u6C42" aria-hidden="true">#</a> \u5C01\u88C5axios\u8BF7\u6C42</h2><p>mock/user.ts \u6A21\u62DF\u7684\u540E\u53F0\u6570\u636E</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>MockMethod<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-mock&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token string">&#39;/api/user/info&#39;</span><span class="token punctuation">,</span>
    method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">response</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> query <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>       <span class="token comment">// axios\u7684response.data\u8FD4\u56DE\u7684\u683C\u5F0F</span>
        code<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
        message<span class="token operator">:</span><span class="token string">&#39;\u8BF7\u6C42\u6210\u529F&#39;</span><span class="token punctuation">,</span>
        type<span class="token operator">:</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>
        result<span class="token operator">:</span> <span class="token punctuation">{</span>
          name<span class="token operator">:</span> <span class="token string">&#39;frank&#39;</span><span class="token punctuation">,</span>
          age<span class="token operator">:</span><span class="token number">18</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    url<span class="token operator">:</span>&#39;<span class="token operator">/</span>api<span class="token operator">/</span>login<span class="token punctuation">,</span>
    method<span class="token operator">:</span><span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
    response<span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">{</span>query<span class="token punctuation">}</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        code<span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>
        message<span class="token operator">:</span><span class="token string">&#39;\u767B\u5F55\u6210\u529F&#39;</span><span class="token punctuation">,</span>
        type<span class="token operator">:</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>
        result<span class="token operator">:</span><span class="token punctuation">{</span>
          token<span class="token operator">:</span>Random<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span> <span class="token keyword">as</span> MockMethod<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>types/ResponseResult.ts response.data \u7684\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">ResponseResult<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>   <span class="token comment">// \u8BF7\u6C42\u8FD4\u56DE\u7684\u6570\u636E</span>
  code<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  message<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span>
  type<span class="token operator">:</span><span class="token string">&#39;success&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
  result<span class="token operator">:</span> <span class="token constant">T</span>     <span class="token comment">// \u8FD4\u56DE\u7684\u7C7B\u578B\u8981\u5B9A\u5236</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>src/plugins/axios/Axios.ts axios\u914D\u7F6E</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> axios<span class="token punctuation">,</span> <span class="token punctuation">{</span>AxiosRequestConfig<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Axios</span> <span class="token punctuation">{</span>   <span class="token comment">//\u5BFC\u51FA</span>
  <span class="token keyword">private</span> instance<span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>config<span class="token operator">:</span>AxiosRequestConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// \u7C7B\u578B config : AxiosRequestConfig</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">interceptors</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token generic-function"><span class="token function">request</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span><span class="token constant">D</span><span class="token operator">=</span>ResponseResult<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>config<span class="token operator">:</span>AxiosRequestConfig<span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">D</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>   <span class="token comment">// \u7C7B\u578B router/types/ResponseResult.ts</span>
    <span class="token comment">//return  await this.instance.request&lt;D&gt;(config)</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>       <span class="token comment">//\u7528Promise\u4F18\u5316\u5904\u7406 \u76F4\u63A5\u8FD4\u56DE response.data</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>instance<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">request</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">D</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token function">interceptors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">//  \u4E0B\u9762\u90FD\u662F\u62E6\u622A\u5668</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">interceptorRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">interceptorResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token function">interceptorRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>config <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5728\u53D1\u9001\u8BF7\u6C42\u4E4B\u524D\u505A\u4E9B\u4EC0\u4E48</span>
      <span class="token keyword">return</span> config<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>error<span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5BF9\u8BF7\u6C42\u9519\u8BEF\u505A\u4E9B\u4EC0\u4E48</span>
      <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token function">interceptorResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>response<span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 2xx \u8303\u56F4\u5185\u7684\u72B6\u6001\u7801\u90FD\u4F1A\u89E6\u53D1\u8BE5\u51FD\u6570\u3002</span>
      <span class="token comment">// \u5BF9\u54CD\u5E94\u6570\u636E\u505A\u70B9\u4EC0\u4E48</span>
      <span class="token keyword">return</span> response<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> error <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8D85\u51FA 2xx \u8303\u56F4\u7684\u72B6\u6001\u7801\u90FD\u4F1A\u89E6\u53D1\u8BE5\u51FD\u6570\u3002</span>
      <span class="token comment">// \u5BF9\u54CD\u5E94\u9519\u8BEF\u505A\u70B9\u4EC0\u4E48</span>
      <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><p>\u7785\u4E00\u4E0B , <code>axios\u5B9E\u4F8B.request&lt;&gt;(config)</code>\u7684\u6CDB\u578B , \u6CE8\u610F\u770B\u7B2C\u4E00\u4E2A\u53C2\u6570<code>T</code>\u662F<code>response.data</code>\u7684\u7C7B\u578B, \u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u8FD4\u56DE\u7684response\u7684\u7C7B\u578B <img src="`+u+'" alt="\u56FE\u7247"><code>T</code>\u662F<code>response.data</code>\u7684\u7C7B\u578B <img src="'+i+`" alt="\u56FE\u7247"> src/plugins/axios/index.ts \u521B\u5EFAaxios\u5B9E\u4F8B, \u628A\u5B9E\u4F8B\u5BFC\u51FA</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Axios <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./Axios&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token comment">// \u521B\u5EFAaxios\u5B9E\u4F8B, \u4E0B\u9762\u628A\u5B9E\u4F8B\u5BFC\u51FA</span>
  baseURL<span class="token operator">:</span><span class="token string">&#39;/api&#39;</span><span class="token punctuation">,</span>
  timeout<span class="token operator">:</span><span class="token number">10000</span><span class="token punctuation">,</span>
  headers<span class="token operator">:</span><span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span>  <span class="token punctuation">{</span> http <span class="token punctuation">}</span>  <span class="token comment">//\u628A\u5B9E\u4F8B\u5BFC\u51FA</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>apis/userApi.ts \u5173\u4E8Euser\u7684\u8BF7\u6C42api</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> http <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../src/plugins/axios/index&#39;</span>

<span class="token keyword">interface</span>  <span class="token class-name">User</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span>
  avatar<span class="token operator">:</span><span class="token builtin">string</span>
<span class="token punctuation">}</span>
 <span class="token keyword">async</span> <span class="token keyword">function</span>  <span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//\u83B7\u53D6\u7528\u6237\u4FE1\u606F</span>
   <span class="token keyword">return</span>  <span class="token keyword">await</span> http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">request</span><span class="token generic class-name"><span class="token operator">&lt;</span>User<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token operator">:</span><span class="token string">&#39;user/info&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//\u7528\u6237\u767B\u5F55\u64CD\u4F5C</span>
  <span class="token comment">// await http.request({</span>
  <span class="token comment">//   url:&#39;login&#39;</span>
  <span class="token comment">// })</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>info <span class="token punctuation">,</span> login<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u4E3E\u4E2A\u4F8B\u5B50, \u5728\u7EC4\u4EF6\u91CC\u4F7F\u7528api\u65F6</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> userApi <span class="token keyword">from</span> <span class="token string">&#39;../apis/userApi&#39;</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> userApi<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>result<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,14);function v(f,w){const a=e("ExternalLinkIcon");return o(),c(l,null,[b,n("p",null,[n("a",m,[d,p(a)]),n("a",g,[h,p(a)])]),y],64)}var _=t(k,[["render",v],["__file","axios.html.vue"]]);export{_ as default};
