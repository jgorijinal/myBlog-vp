import{_ as e,r as o,o as c,c as l,a as n,e as p,F as u,b as s,d as t}from"./app.fcb85f29.js";var i="/myBlog-vp/assets/env.6781ca44.png",r="/myBlog-vp/assets/tailwindcss.b3580e83.png",k="/myBlog-vp/assets/vitePlugins.2a8aaefb.png";const d={},b=n("h1",{id:"vite\u73AF\u5883",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vite\u73AF\u5883","aria-hidden":"true"},"#"),s(" Vite\u73AF\u5883")],-1),m=n("h2",{id:"\u73AF\u5883\u53D8\u91CF-env\u6587\u4EF6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u73AF\u5883\u53D8\u91CF-env\u6587\u4EF6","aria-hidden":"true"},"#"),s(" \u73AF\u5883\u53D8\u91CF .env\u6587\u4EF6")],-1),v={href:"https://cn.vitejs.dev/guide/env-and-mode.html",target:"_blank",rel:"noopener noreferrer"},g=s("\u5B98\u7F51"),y=t(`<p><code>.env</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>VITE_SOME_KEY=123
VITE_ROUTER_AUTOLOAD=true
VITE_API_URL=&quot;/api&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u52A0\u8F7D\u7684\u73AF\u5883\u53D8\u91CF\u4E5F\u4F1A\u901A\u8FC7<code>i<wbr>mport.meta.env</code> \u4EE5<strong>\u5B57\u7B26\u4E32\u5F62\u5F0F</strong>\u66B4\u9732\u7ED9\u5BA2\u6237\u7AEF\u6E90\u7801\u3002</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6CE8\u610F, \u503C\u5168\u90FD\u662F<strong>\u5B57\u7B26\u4E32</strong><img src="`+i+`" alt="\u56FE\u7247"></p><h2 id="vite-config-ts" tabindex="-1"><a class="header-anchor" href="#vite-config-ts" aria-hidden="true">#</a> vite.config.ts</h2><p>\u521B\u5EFA\u4E00\u4E2A\u53EB<code>vite</code>\u7684\u6587\u4EF6\u5939, \u628A<code>vite.config.ts</code>\u7684\u914D\u7F6E\u62C6\u5206\u5230\u8FD9\u4E2A\u6587\u4EF6\u5939\u91CC, \u9632\u6B62\u914D\u7F6E\u7684\u4EE3\u7801\u5806\u79EF vite/alias.ts <strong>@\u522B\u540D</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>AliasOptions<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> alias <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-property property">&#39;@&#39;</span><span class="token operator">:</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&#39;../src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">as</span> AliasOptions

<span class="token keyword">export</span> <span class="token keyword">default</span> alias
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>vite/util.ts \u56E0\u4E3A\u73AF\u5883\u53D8\u91CF\u90FD\u662F\u5B57\u7B26\u4E32 , \u8FD9\u662F<strong>\u8F6C\u6362env\u73AF\u5883\u53D8\u91CF\u7684\u51FD\u6570</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> _ <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span>  <span class="token function">parseEnv</span><span class="token punctuation">(</span>env<span class="token operator">:</span>Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u8F6C\u6362env\u73AF\u5883\u53D8\u91CF\u7684\u51FD\u6570</span>
    <span class="token keyword">const</span> envs <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span>  <span class="token comment">//\u6DF1\u62F7\u8D1D</span>
    <span class="token comment">// console.log(envs)</span>
    Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>envs<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span>key<span class="token punctuation">,</span>value<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token string">&#39;true&#39;</span> <span class="token operator">||</span> value <span class="token operator">===</span> <span class="token string">&#39;false&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        envs<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value <span class="token operator">===</span> <span class="token string">&#39;true&#39;</span>
       <span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        envs<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> envs
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><code>vite.config.ts</code> <strong>vite\u603B\u914D\u7F6E</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>ConfigEnv<span class="token punctuation">,</span>  loadEnv<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> alias <span class="token keyword">from</span> <span class="token string">&#39;./vite/alias&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>parseEnv<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./vite/util&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>command<span class="token punctuation">,</span> mode<span class="token punctuation">}</span><span class="token operator">:</span> ConfigEnv<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>   <span class="token comment">//command\u662F\u751F\u4EA7\u73AF\u5883, mode\u662F\u8FD0\u884C\u6A21\u5F0F &#39;development&#39;\uFF08serve\uFF09\uFF0C&#39;production&#39;\uFF08build\uFF09</span>
  <span class="token keyword">const</span> isBuild <span class="token operator">=</span> command <span class="token operator">===</span> <span class="token string">&#39;build&#39;</span><span class="token punctuation">;</span> <span class="token comment">//\u662F\u5426\u7F16\u8BD1\u6A21\u5F0F</span>
  <span class="token keyword">const</span> root <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//\u9879\u76EE\u6839\u76EE\u5F55</span>
  <span class="token keyword">const</span> env <span class="token operator">=</span> <span class="token function">parseEnv</span><span class="token punctuation">(</span><span class="token function">loadEnv</span><span class="token punctuation">(</span>mode <span class="token punctuation">,</span> root<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    resolve<span class="token operator">:</span> <span class="token punctuation">{</span>alias<span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u63D2\u4EF6\u62D3\u5C55\u4E0Etailwindcss\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u63D2\u4EF6\u62D3\u5C55\u4E0Etailwindcss\u914D\u7F6E" aria-hidden="true">#</a> \u63D2\u4EF6\u62D3\u5C55\u4E0Etailwindcss\u914D\u7F6E</h2>`,13),w={href:"https://tailwindcss.com/docs/guides/vite",target:"_blank",rel:"noopener noreferrer"},f=s("tailwindcss\u5B98\u7F51vite\u914D\u7F6E"),h=t('<p>plugins\u76EE\u5F55\u7ED3\u6784 <img src="'+r+`" alt="\u56FE\u7247"></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u751F\u6210<code>tailwind.config.js</code>\u914D\u7F6E\u6587\u4EF6</p><p>tailwind.config.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;./index.html&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;./src/**/*.{vue,js,ts,jsx,tsx}&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>plugins/tailwindcss/tailwindcss.css</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>
<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>
<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>plugins/tailwindcss/index.ts</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token string">&#39;./tailwindcss.css&#39;</span>
<span class="token keyword">export</span>  <span class="token keyword">function</span> <span class="token function">setupTailwindcss</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>plugins/index.ts</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>App<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>setupTailwindcss<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/plugins/tailwindcss&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">setupPlugins</span><span class="token punctuation">(</span>app<span class="token operator">:</span>App<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setupTailwindcss</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>src/main.ts</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;@/App.vue&#39;</span>
<span class="token keyword">import</span> router <span class="token punctuation">,</span> <span class="token punctuation">{</span> setupRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/router&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>setupPlugins<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/plugins&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>
  <span class="token function">setupRouter</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span>
  <span class="token function">setupPlugins</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span>
  <span class="token keyword">await</span> router<span class="token punctuation">.</span><span class="token function">isReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="vite\u63D2\u4EF6\u72EC\u7ACB\u7BA1\u7406" tabindex="-1"><a class="header-anchor" href="#vite\u63D2\u4EF6\u72EC\u7ACB\u7BA1\u7406" aria-hidden="true">#</a> vite\u63D2\u4EF6\u72EC\u7ACB\u7BA1\u7406</h2><p>\u76EE\u5F55\u7ED3\u6784 <img src="`+k+`" alt="\u56FE\u7247"></p><p>vite.config.ts</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>ConfigEnv<span class="token punctuation">,</span>  loadEnv<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> alias <span class="token keyword">from</span> <span class="token string">&#39;./vite/alias&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>parseEnv<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./vite/util&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> setupPlugins <span class="token keyword">from</span> <span class="token string">&#39;./vite/plugins&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>command<span class="token punctuation">,</span> mode<span class="token punctuation">}</span><span class="token operator">:</span> ConfigEnv<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>   <span class="token comment">//command\u662F\u751F\u4EA7\u73AF\u5883, mode\u662F\u8FD0\u884C\u6A21\u5F0F &#39;development&#39;\uFF08serve\uFF09\uFF0C&#39;production&#39;\uFF08build\uFF09</span>
  <span class="token keyword">const</span> isBuild <span class="token operator">=</span> command <span class="token operator">===</span> <span class="token string">&#39;build&#39;</span><span class="token punctuation">;</span> <span class="token comment">//\u662F\u5426\u7F16\u8BD1\u6A21\u5F0F</span>
  <span class="token keyword">const</span> root <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//\u9879\u76EE\u6839\u76EE\u5F55</span>
  <span class="token keyword">const</span> env <span class="token operator">=</span> <span class="token function">parseEnv</span><span class="token punctuation">(</span><span class="token function">loadEnv</span><span class="token punctuation">(</span>mode <span class="token punctuation">,</span> root<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    plugins<span class="token operator">:</span> <span class="token function">setupPlugins</span><span class="token punctuation">(</span>isBuild<span class="token punctuation">,</span>env<span class="token punctuation">)</span><span class="token punctuation">,</span>
    resolve<span class="token operator">:</span> <span class="token punctuation">{</span>alias<span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="vite-plugin-mock\u63D2\u4EF6" tabindex="-1"><a class="header-anchor" href="#vite-plugin-mock\u63D2\u4EF6" aria-hidden="true">#</a> vite-plugin-mock\u63D2\u4EF6</h3><p>vite/plugins/index.ts</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>Plugin<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> setupMockPlugin <span class="token keyword">from</span> <span class="token string">&#39;./mock&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">setupPlugins</span><span class="token punctuation">(</span>isBuild<span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">,</span> env<span class="token operator">:</span>Record<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> plugins<span class="token operator">:</span>Plugin<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
  plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">setupMockPlugin</span><span class="token punctuation">(</span>isBuild<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//mock\u63D2\u4EF6</span>
  <span class="token keyword">return</span> plugins
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,20),_=s("\u5B89\u88C5 "),x=n("code",null,"vite-plugin-mock",-1),E=s("\u63D2\u4EF6 \u76EE\u7684:\u8981\u6A21\u62DF \u540E\u53F0\u6570\u636E "),I={href:"https://github.com/vbenjs/vite-plugin-mock",target:"_blank",rel:"noopener noreferrer"},j=s("\u5B98\u7F51"),A=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> mockjs
<span class="token function">yarn</span> <span class="token function">add</span> vite-plugin-mock -D
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>vite/plugins/mock.ts</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> viteMockServe <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-mock&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">setupMockPlugin</span><span class="token punctuation">(</span>isBuild<span class="token operator">:</span><span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">viteMockServe</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// default</span>
    mockPath<span class="token operator">:</span> <span class="token string">&#39;mock&#39;</span><span class="token punctuation">,</span>
    localEnabled<span class="token operator">:</span> <span class="token operator">!</span>isBuild<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="\u4E3A\u73AF\u5883\u53D8\u91CF\u6DFB\u52A0\u7C7B\u578B\u652F\u6301" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u73AF\u5883\u53D8\u91CF\u6DFB\u52A0\u7C7B\u578B\u652F\u6301" aria-hidden="true">#</a> \u4E3A\u73AF\u5883\u53D8\u91CF\u6DFB\u52A0\u7C7B\u578B\u652F\u6301</h2>`,4),P={href:"https://cn.vitejs.dev/guide/env-and-mode.html#intellisense",target:"_blank",rel:"noopener noreferrer"},T=s("vite\u5B98\u7F51"),B=s(" types/viteEnv.d.ts"),V=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">ViteEnv</span> <span class="token punctuation">{</span>
  <span class="token constant">VITE_SOME_KEY</span><span class="token operator">:</span><span class="token builtin">number</span>
  <span class="token constant">VITE_ROUTER_AUTOLOAD</span><span class="token operator">:</span><span class="token builtin">boolean</span>
  <span class="token constant">VITE_API_URL</span><span class="token operator">:</span><span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">ImportMetaEnv</span>  <span class="token keyword">extends</span> <span class="token class-name">ViteEnv</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">ImportMeta</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> env<span class="token operator">:</span> ImportMetaEnv
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u4F18\u5316\u73AF\u5883\u53D8\u91CF\u5BFC\u51FA" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5316\u73AF\u5883\u53D8\u91CF\u5BFC\u51FA" aria-hidden="true">#</a> \u4F18\u5316\u73AF\u5883\u53D8\u91CF\u5BFC\u51FA</h2><p>src/util/helper.ts</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> _ <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span><span class="token punctuation">;</span>
 <span class="token keyword">class</span> <span class="token class-name">Helper</span>  <span class="token punctuation">{</span>
  <span class="token keyword">public</span> env <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> ImportMetaEnv

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>env <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getEnvs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">private</span> <span class="token function">getEnvs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>ImportMetaEnv <span class="token punctuation">{</span>
    <span class="token keyword">const</span> envs <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">)</span>

    Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>envs<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span>key<span class="token punctuation">,</span>value<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token string">&#39;true&#39;</span> <span class="token operator">||</span> value <span class="token operator">===</span> <span class="token string">&#39;false&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        envs<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value <span class="token operator">===</span> <span class="token string">&#39;true&#39;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        envs<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span><span class="token string">&#39;null&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        envs<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span><span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        envs<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> envs
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> helper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Helper</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> env <span class="token operator">=</span> helper<span class="token punctuation">.</span>env
<span class="token keyword">export</span> <span class="token keyword">default</span> helper
<span class="token keyword">export</span> <span class="token punctuation">{</span> env <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>`,4);function M(O,R){const a=o("ExternalLinkIcon");return c(),l(u,null,[b,m,n("p",null,[n("a",v,[g,p(a)])]),y,n("p",null,[n("a",w,[f,p(a)])]),h,n("p",null,[_,x,E,n("a",I,[j,p(a)])]),A,n("p",null,[n("a",P,[T,p(a)]),B]),V],64)}var D=e(d,[["render",M],["__file","vite.html.vue"]]);export{D as default};
