import{_ as s,d as a}from"./app.fcb85f29.js";var p="/myBlog-vp/assets/as1.4351258d.png",n="/myBlog-vp/assets/ad.96f40fe3.png",e="/myBlog-vp/assets/mss.18a55bcd.png",t="/myBlog-vp/assets/tp.2db0ef82.png",o="/myBlog-vp/assets/ip.dd83ab6e.png",l="/myBlog-vp/assets/co.5d7344dd.png",c="/myBlog-vp/assets/!!.189ed343.png",r="/myBlog-vp/assets/nnnn.87bd0b78.png",i="/myBlog-vp/assets/string1.485382f6.png";const u={},k=a('<h1 id="\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u65AD\u8A00" aria-hidden="true">#</a> \u65AD\u8A00</h1><h2 id="as\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#as\u65AD\u8A00" aria-hidden="true">#</a> as\u65AD\u8A00</h2><p>TypeScript\u53EA\u77E5\u9053\u8BE5\u51FD\u6570\u4F1A\u8FD4\u56DE Element \uFF0C\u4F46\u5E76\u4E0D\u77E5\u9053\u5B83\u5177\u4F53\u7684\u7C7B\u578B <img src="'+p+'" alt="\u56FE\u7247"><img src="'+n+`" alt="\u56FE\u7247"></p><h2 id="\u975E\u7A7A\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u975E\u7A7A\u65AD\u8A00" aria-hidden="true">#</a> \u975E\u7A7A\u65AD\u8A00!</h2><p>\u5148\u8981\u5F00\u542F tsconfig.json \u7684\u914D\u7F6E\u9879strictNullChecks \u5B57\u6BB5\u4E3A true\u3002</p><p>\u901A\u8FC7 querySelector\u83B7\u53D6\u5143\u7D20, \u53EF\u80FD\u5B58\u5728,\u4E5F\u6709\u53EF\u80FD\u4E3Anull</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> el  <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span>   <span class="token comment">//let el: Element | null</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>id<span class="token punctuation">)</span>  <span class="token comment">//\u62A5\u9519 Object is possibly &#39;null&#39;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u53EF\u4EE5\u4F7F\u7528 as \u65AD\u8A00\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> el  <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span>  <span class="token keyword">as</span> HTMLDivElement
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>id<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u6216\u8005 \u5728\u503C\u540E\u9762\u4F7F\u7528 <code>!</code>\u6765\u58F0\u660E\u503C\u975Enull</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> el<span class="token operator">:</span> HTMLDivElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.hd&#39;</span><span class="token punctuation">)</span><span class="token operator">!</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+n+'" alt="\u56FE\u7247"> \u8FD9\u662F\u56E0\u4E3A\u4F20\u5165\u7684message\u6709\u53EF\u80FD\u662F\u4E3Aundefined\u7684\uFF0C\u8FD9\u4E2A\u65F6\u5019\u662F\u4E0D\u80FD\u6267\u884C\u65B9\u6CD5\u7684\uFF1B <img src="'+e+'" alt="\u56FE\u7247"> \u975E\u7A7A\u65AD\u8A00\u4F7F\u7528\u7684\u662F <code>!</code> \uFF0C\u8868\u793A\u53EF\u4EE5\u786E\u5B9A\u67D0\u4E2A\u6807\u8BC6\u7B26\u662F\u6709\u503C\u7684\uFF0C<strong>\u8DF3\u8FC7ts\u5728\u7F16\u8BD1\u9636\u6BB5\u5BF9\u5B83\u7684\u68C0\u6D4B</strong></p><h2 id="\u53EF\u9009\u94FE\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u53EF\u9009\u94FE\u7684\u4F7F\u7528" aria-hidden="true">#</a> \u53EF\u9009\u94FE\u7684\u4F7F\u7528</h2><p>\u53EF\u9009\u94FE\u4E8B\u5B9E\u4E0A\u5E76\u4E0D\u662FTypeScript\u72EC\u6709\u7684\u7279\u6027\uFF0C\u5B83\u662FES11\uFF08ES2020\uFF09\u4E2D\u589E\u52A0\u7684\u7279\u6027\uFF1A</p><ul><li>\u53EF\u9009\u94FE\u4F7F\u7528\u53EF\u9009\u94FE\u64CD\u4F5C\u7B26 ?.\uFF1B</li><li>\u5B83\u7684\u4F5C\u7528\u662F\u5F53\u5BF9\u8C61\u7684\u5C5E\u6027\u4E0D\u5B58\u5728\u65F6\uFF0C\u4F1A\u77ED\u8DEF\uFF0C\u76F4\u63A5\u8FD4\u56DE undefined\uFF0C\u5982\u679C\u5B58\u5728\uFF0C\u90A3\u4E48\u624D\u4F1A\u7EE7\u7EED\u6267\u884C\uFF1B</li><li>\u867D\u7136\u53EF\u9009\u94FE\u64CD\u4F5C\u662FECMAScript\u63D0\u51FA\u7684\u7279\u6027\uFF0C\u4F46\u662F\u548C TypeScript \u4E00\u8D77\u4F7F\u7528\u66F4\u7248\u672C <img src="'+t+'" alt="\u56FE\u7247"> <img src="'+o+'" alt="\u56FE\u7247"><img src="'+l+'" alt="\u56FE\u7247"></li></ul><h2 id="\u548C-\u7684\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#\u548C-\u7684\u4F5C\u7528" aria-hidden="true">#</a> ?? \u548C !! \u7684\u4F5C\u7528</h2><p>!!\u64CD\u4F5C\u7B26\uFF1A</p><ul><li>\u5C06\u4E00\u4E2A\u5176\u4ED6\u7C7B\u578B\u8F6C\u6362\u6210boolean\u7C7B\u578B\uFF1B</li><li>\u7C7B\u4F3C\u4E8EBoolean(\u53D8\u91CF)\u7684\u65B9\u5F0F\uFF1B</li></ul><p>??\u64CD\u4F5C\u7B26\uFF1A</p><ul><li>\u5B83\u662FES11\u589E\u52A0\u7684\u65B0\u7279\u6027\uFF1B</li><li>\u7A7A\u503C\u5408\u5E76\u64CD\u4F5C\u7B26\uFF08??\uFF09\u662F\u4E00\u4E2A\u903B\u8F91\u64CD\u4F5C\u7B26\uFF0C\u5F53<strong>\u64CD\u4F5C\u7B26\u7684\u5DE6\u4FA7\u662F null \u6216\u8005 undefined \u65F6</strong>\uFF0C\u8FD4\u56DE\u5176\u53F3\u4FA7\u64CD\u4F5C\u6570\uFF0C\u5426\u5219\u8FD4\u56DE\u5DE6\u4FA7\u64CD\u4F5C\u6570</li></ul><p><img src="'+c+'" alt="\u56FE\u7247"></p><p><img src="'+r+'" alt="\u56FE\u7247"></p><h2 id="\u5B57\u9762\u91CF\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B57\u9762\u91CF\u7C7B\u578B" aria-hidden="true">#</a> \u5B57\u9762\u91CF\u7C7B\u578B</h2><p>\u53EF\u4EE5\u5C06\u591A\u4E2A\u7C7B\u578B\u8054\u5408\u5728\u4E00\u8D77 <img src="'+i+`" alt="\u56FE\u7247"></p><h2 id="const-\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#const-\u65AD\u8A00" aria-hidden="true">#</a> const \u65AD\u8A00</h2><h3 id="let-const" tabindex="-1"><a class="header-anchor" href="#let-const" aria-hidden="true">#</a> let &amp; const</h3><ul><li>const \u4FDD\u8BC1\u8BE5\u5B57\u9762\u91CF\u7684\u4E25\u683C\u7C7B\u578B</li><li>let \u4E3A\u901A\u7528\u7C7B\u578B\u6BD4\u5982\u5B57\u7B26\u4E32\u7C7B\u578B const hd = &#39;houdunren&#39; //const h</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span> <span class="token comment">//const str: &quot;hello&quot;</span>
<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>  <span class="token comment">//let x: string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="as-const" tabindex="-1"><a class="header-anchor" href="#as-const" aria-hidden="true">#</a> as const</h3><p>const\u65AD\u8A00\u4F1A\u6839\u636E\u5177\u4F53\u7684\u503C\u63A8\u65AD\u51FA\u5B83\u80FD\u63A8\u65AD\u51FA\u7684\u6700\u7A84\u6216\u6700\u7279\u5B9A\u7684\u7C7B\u578B , \u800C\u4E0D\u662F\u5BBD\u6CDB\u7684\u7C7B\u578B</p><ul><li>\u5B57\u7B26\u4E32\u3001\u5E03\u5C14\u7C7B\u578B\u8F6C\u6362\u4E3A\u5177\u4F53\u503C</li><li>\u5BF9\u8C61\u8F6C\u6362\u4E3A\u53EA\u8BFB\u5C5E\u6027</li><li>\u6570\u7EC4\u8F6C\u6362\u6210\u4E3A\u53EA\u8BFB\u5143\u7EC4</li></ul><p>\u503C</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span> <span class="token keyword">as</span> <span class="token keyword">const</span>  <span class="token comment">//let str: &quot;hello&quot;</span>
str <span class="token operator">=</span> <span class="token string">&#39;hi&#39;</span> <span class="token comment">//\u62A5\u9519</span>

<span class="token comment">//\u7C7B\u4F3C\u4E8E</span>
<span class="token keyword">let</span> str<span class="token operator">:</span><span class="token string">&#39;hello = &#39;</span>hello
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5BF9\u8C61\u8F6C\u6362\u4E3A\u53EA\u8BFB\u5C5E\u6027</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span>  user <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">&#39;frank&#39;</span> <span class="token punctuation">,</span> age<span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token keyword">const</span>
<span class="token comment">//let user: { readonly name: &quot;frank&quot;, readonly age: 18 } </span>
<span class="token comment">//\u53EA\u8BFB\u5C5E\u6027 , \u4E0D\u5141\u8BB8\u8BBE\u7F6E\u503C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5F53\u4E3A\u53D8\u91CF\u65F6\u8F6C\u6362\u4E3A\u5176\u53D8\u91CF\u7684\u7C7B\u578B\uFF0C\u5177\u4F53\u503C\u662F\u8F6C\u4E3A\u503C\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">2030</span>

<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span> <span class="token comment">//readonly [string, number, &quot;hello&quot;, true, 100]</span>
<span class="token keyword">let</span> hd <span class="token operator">=</span> f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
hd <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u6570\u7EC4\u4F7F\u7528as-const" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u4F7F\u7528as-const" aria-hidden="true">#</a> \u6570\u7EC4\u4F7F\u7528as const</h3><p>\u53D8\u91CF x \u5F97\u5230\u7684\u7C7B\u578B\u662F\u6570\u7EC4\u7684\u7C7B\u578B string | number\uFF0C\u6240\u4EE5\u53EA\u8981\u503C\u662F\u8FD9\u4E24\u4E2A\u7C7B\u578B\u90FD\u53EF\u4EE5</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span>  a<span class="token operator">:</span><span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
<span class="token keyword">let</span> b<span class="token operator">:</span><span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span>  <span class="token comment">// let arr: (string | number)[]</span>
<span class="token keyword">let</span> x <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment">//let x: string | number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4F7F\u7528 const \u540E\u4F1A\u5F97\u5230\u503C\u7684\u5177\u4F53\u7C7B\u578B\uFF0C\u4F1A\u8BA9\u6570\u7EC4\u8F6C\u6362\u6210\u4E3A\u53EA\u8BFB\u5143\u7EC4</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span>  a<span class="token operator">:</span><span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
<span class="token keyword">let</span> b<span class="token operator">:</span><span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span>  <span class="token comment">// let arr: readonly [string, number]</span>
<span class="token comment">//\u4E5F\u53EF\u4EE5\u8FD9\u4E48\u5199</span>
<span class="token comment">// let arr = &lt;const&gt;[a, b]</span>
<span class="token keyword">let</span> x <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>      <span class="token comment">//let x: number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u89E3\u6784\u4E2D\u4F7F\u7528as-const" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6784\u4E2D\u4F7F\u7528as-const" aria-hidden="true">#</a> \u89E3\u6784\u4E2D\u4F7F\u7528as const</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> a  <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
  <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">,</span> y<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y
  <span class="token keyword">return</span> <span class="token punctuation">[</span>a <span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>n <span class="token punctuation">,</span> m<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m <span class="token keyword">as</span> <span class="token builtin">Function</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//\u6216\u8005</span>
<span class="token comment">//console.log((m as (x: number, y: number) =&gt; number)(1, 5))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u53EF\u4EE5\u5728\u51FD\u6570\u4F53\u5185\u58F0\u660E\u8FD4\u56DE\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> a  <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
  <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">,</span> y<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y
  <span class="token keyword">return</span> <span class="token punctuation">[</span>a <span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token keyword">as</span>  <span class="token punctuation">[</span><span class="token keyword">typeof</span> a <span class="token punctuation">,</span> <span class="token keyword">typeof</span> b<span class="token punctuation">]</span> 
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>n <span class="token punctuation">,</span> m<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//const m: (x: number, y: number) =&gt; number</span>
<span class="token function">m</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> 
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u4F7F\u7528 as const \u5C31\u53EF\u4EE5\u5F88\u9AD8\u6548\u7684\u89E3\u51B3\u4E0A\u9762\u7684\u95EE\u9898\uFF0C\u53EF\u4EE5\u5F97\u5230\u5177\u4F53\u7684\u7C7B\u578B\uFF0C\u6765\u5F97\u5230\u66F4\u5B89\u5168\u7684\u4EE3\u7801\uFF0C\u540C\u65F6\u4F1A\u6709\u66F4\u597D\u7684\u4EE3\u7801\u63D0\u793A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> a  <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
  <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">,</span> y<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y
  <span class="token keyword">return</span> <span class="token punctuation">[</span>a <span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>n <span class="token punctuation">,</span> m<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//const m: (x: number, y: number) =&gt; number</span>
<span class="token function">m</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u53EF\u4EE5\u65AD\u8A00 m \u4E3A\u51FD\u6570\u7136\u540E\u8C03\u7528</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> a  <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
  <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span><span class="token builtin">number</span> <span class="token punctuation">,</span> y<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y
  
</code></pre><div class="highlight-lines"><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,50);function d(b,m){return k}var h=s(u,[["render",d],["__file","as.html.vue"]]);export{h as default};
