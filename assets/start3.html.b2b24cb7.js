import{_ as s,d as a}from"./app.fcb85f29.js";var p="/myBlog-vp/assets/shu1.e11e685b.png",t="/myBlog-vp/assets/shu2.ace8e20a.png",e="/myBlog-vp/assets/ecs1.78dde081.png",o="/myBlog-vp/assets/ecs2.816eccc2.png",c="/myBlog-vp/assets/mane1.d3cc5386.png",l="/myBlog-vp/assets/mane2.662dff12.png",r="/myBlog-vp/assets/erc1.7eaab1f5.png",n="/myBlog-vp/assets/erc2.4f9e5edb.png",u="/myBlog-vp/assets/bst2.6df46fda.png",k="/myBlog-vp/assets/erfang1.742ddc67.png",i="/myBlog-vp/assets/dayinzhanshi1.dd6f2061.png",b="/myBlog-vp/assets/xianxu1.7e05c9b2.png",m="/myBlog-vp/assets/zhongxu1.9a86c9cd.png",d="/myBlog-vp/assets/houxu1.3637a51b.png",g="/myBlog-vp/assets/mixmax1.1ed57275.png",y="/myBlog-vp/assets/ershan1.dc656e13.png",w="/myBlog-vp/assets/shanye1.e932b37f.png",h="/myBlog-vp/assets/yigezi1.36e92bb7.png",f="/myBlog-vp/assets/zhiyouyi1.47a65a28.png",v="/myBlog-vp/assets/liangjie1.92cc53a8.png",T="/myBlog-vp/assets/shanzong1.5b9f7cb2.png",N="/myBlog-vp/assets/feipingheng1.d1418cc3.png";const _={},x=a('<h1 id="\u6811" tabindex="-1"><a class="header-anchor" href="#\u6811" aria-hidden="true">#</a> \u6811</h1><h2 id="\u6811\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u6811\u7ED3\u6784" aria-hidden="true">#</a> \u6811\u7ED3\u6784</h2><p><strong>\u4E3A\u4EC0\u4E48\u9700\u8981\u4F7F\u7528\u6811\u7ED3\u6784\u6765\u4FDD\u5B58\u6570\u636E\u5462?</strong></p><p><strong>\u6811\u7ED3\u6784</strong> \u548C <strong>\u6570\u7EC4/\u94FE\u8868/\u54C8\u5E0C\u8868</strong> \u5BF9\u6BD4\u8D77\u6765\u6709\u4EC0\u4E48\u4F18\u70B9\u5462 ?</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><h4 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h4><ol><li><strong>\u4F18\u70B9:</strong></li></ol><ul><li>\u6570\u7EC4\u7684\u4E3B\u8981\u4F18\u70B9\u662F\u6839\u636E <strong>\u4E0B\u6807\u503C\u8BBF\u95EE</strong> \u6548\u7387\u4F1A\u5F88\u9AD8</li><li>\u4F46\u662F\u5982\u679C\u5E0C\u671B\u6839\u636E\u5143\u7D20\u67E5\u627E\u5BF9\u5E94\u7684\u4F4D\u7F6E\u5462?</li><li>\u6BD4\u8F83\u597D\u7684\u65B9\u6CD5\u662F\u5148\u5BF9\u6570\u7EC4\u8FDB\u884C<strong>\u6392\u5E8F</strong>, \u5728\u8FDB\u884C <strong>\u4E8C\u5206\u67E5\u627E</strong></li></ul><ol start="2"><li><strong>\u7F3A\u70B9:</strong></li></ol><ul><li>\u9700\u8981\u5148\u5BF9\u6570\u7EC4\u8FDB\u884C<strong>\u6392\u5E8F</strong>, \u751F\u6210<strong>\u6709\u5E8F\u6570\u7EC4</strong>, \u624D\u80FD\u63D0\u9AD8\u67E5\u627E\u6548\u7387</li><li>\u53E6\u5916\u6570\u7EC4\u5728<strong>\u63D2\u5165\u548C\u5220\u9664\u6570\u636E</strong>\u65F6, \u9700\u8981<strong>\u6709\u5927\u91CF\u7684\u4F4D\u79FB\u64CD\u4F5C</strong>(\u6BD4\u5982\u5728\u9996\u4F4D\u6216\u4E2D\u95F4\u4F4D\u7F6E\u8FDB\u884C\u6DFB\u52A0\u6216\u5220\u9664\u64CD\u4F5C), \u6548\u7387\u5F88\u4F4E</li></ul></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><h4 id="\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868" aria-hidden="true">#</a> \u94FE\u8868</h4><ol><li>\u4F18\u70B9</li></ol><ul><li>\u63D2\u5165\u548C\u5220\u9664\u6570\u636E\u7684\u6548\u7387\u9AD8</li></ul><ol start="2"><li>\u7F3A\u70B9:</li></ol><ul><li><strong>\u67E5\u627E</strong>\u6548\u7387\u6BD4\u8F83\u4F4E, \u9700\u8981\u91CD\u5934\u5F00\u59CB\u4F9D\u6B21\u8BBF\u95EE\u94FE\u8868\u4E2D\u7684\u6BCF\u4E2A\u6570\u636E\u9879, \u76F4\u5230\u627E\u5230\u4E3A\u6B62</li><li>\u800C\u4E14\u5373\u4F7F\u662F\u5220\u9664\u6216\u8005\u63D2\u5165\u7684\u6548\u7387\u5F88\u9AD8, \u4F46\u662F\u5982\u679C\u8981\u63D2\u5165\u548C\u5220\u9664\u4E2D\u95F4\u4F4D\u7F6E\u7684\u6570\u636E, \u8FD8\u662F\u9700\u8981\u4ECE\u5934\u5148\u627E\u5230\u5BF9\u5E94\u7684\u6570\u636E</li></ul></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><h4 id="\u54C8\u5E0C\u8868" tabindex="-1"><a class="header-anchor" href="#\u54C8\u5E0C\u8868" aria-hidden="true">#</a> \u54C8\u5E0C\u8868</h4><ol><li>\u4F18\u70B9:</li></ol><ul><li>\u54C8\u5E0C\u8868\u7684\u63D2\u5165/\u67E5\u8BE2/\u5220\u9664 \u6548\u7387\u90FD\u662F\u5F88\u9AD8\u7684</li></ul><ol start="2"><li>\u7F3A\u70B9</li></ol><ul><li>\u7A7A\u95F4\u5229\u7528\u7387\u4E0D\u9AD8, \u5E95\u5C42\u4F7F\u7528\u7684\u662F\u6570\u7EC4, \u5E76\u4E14\u67D0\u4E9B\u5355\u5143\u662F\u6CA1\u6709\u88AB\u5229\u7528\u7684</li><li>\u54C8\u5E0C\u8868\u4E2D\u7684\u5143\u7D20\u662F<strong>\u65E0\u5E8F\u7684</strong>, \u4E0D\u80FD\u6309\u7167\u56FA\u5B9A\u7684\u987A\u5E8F\u6765\u904D\u5386\u54C8\u5E0C\u8868\u4E2D\u7684\u5143\u7D20</li><li>\u4E0D\u80FD\u5FEB\u901F\u7684\u627E\u51FA\u54C8\u5E0C\u8868\u4E2D\u7684 <strong>\u6700\u5927\u503C/\u6700\u5C0F\u732A</strong> \u8FD9\u4E9B\u7279\u6B8A\u7684\u503C</li></ul></div><p><strong>\u6811\u7ED3\u6784</strong></p><ol><li>\u4E0D\u80FD\u8BF4\u6811\u7ED3\u6784\u6BD4\u5176\u4ED6\u6570\u636E\u7ED3\u6784\u90FD\u8981\u597D, \u56E0\u4E3A<strong>\u6BCF\u79CD\u6570\u636E\u7ED3\u6784\u90FD\u6709\u81EA\u5DF1\u7684\u5E94\u7528\u573A\u666F</strong></li><li>\u4F46\u662F<strong>\u6811\u7ED3\u6784\u786E\u5B9E\u4E5F\u7EFC\u5408\u4E86\u4E0A\u9762\u6570\u636E\u7ED3\u6784\u7684\u4F18\u70B9</strong>(\u5F53\u7136\u8FD9\u4E9B\u4F18\u70B9\u4E0D\u8DB3\u4E8E\u76D6\u8FC7\u5176\u4ED6\u6570\u636E\u7ED3\u6784, \u6BD4\u5982\u6548\u7387\u5728\u4E00\u822C\u60C5\u51B5\u4E0B\u6CA1\u6709\u54C8\u5E0C\u8868\u9AD8)</li><li>\u5E76\u4E14<strong>\u4E5F\u5F25\u8865\u4E0A\u4E86\u4E0A\u9762\u6570\u636E\u7ED3\u6784\u7684\u7F3A\u70B9</strong></li></ol><p>\u800C\u4E14\u4E3A\u4E86\u6A21\u62DF\u67D0\u4E9B\u573A\u666F, \u4F7F\u7528\u6811\u7ED3\u6784\u4F1A\u66F4\u52A0\u65B9\u4FBF</p><ul><li>\u56E0\u4E3A\u6811\u7ED3\u6784\u662F\u975E\u7EBF\u6027\u7684, \u53EF\u4EE5\u8868\u793A<strong>\u4E00\u5BF9\u591A</strong>\u7684\u5173\u7CFB</li><li>\u6BD4\u5982<strong>\u6587\u4EF6\u7684\u76EE\u5F55\u7ED3\u6784</strong></li></ul><h3 id="\u6811\u7684\u672F\u8BED" tabindex="-1"><a class="header-anchor" href="#\u6811\u7684\u672F\u8BED" aria-hidden="true">#</a> \u6811\u7684\u672F\u8BED</h3><p><strong>\u6811</strong>: n(n &gt;= 0) \u4E2A\u8282\u70B9\u6784\u6210\u7684<strong>\u6709\u9650\u96C6\u5408</strong></p><ul><li>\u5F53 n = 0 \u65F6 , \u79F0\u4E3A <strong>\u7A7A\u6811</strong></li></ul><p><strong>\u5BF9\u4E8E\u4EFB\u610F\u68F5\u975E\u7A7A\u6811(n &gt;= 0) ,\u5B83\u5177\u5907\u4E00\u4E0B\u7279\u6027</strong></p><ul><li>\u6811\u4E2D\u6709\u4E00\u4E2A\u79F0\u4E3A <strong>\u6839 (Root)</strong> \u7684\u7279\u6B8A\u8282\u70B9, \u7528 r \u8868\u793A</li><li>\u5176\u4F59\u8282\u70B9\u53EF\u5206\u4E3A m(m&gt;0) \u4E2A\u4E92\u4E0D\u9999\u8549\u7684\u6709\u9650\u96C6\u5408, T1, T2, T3 ... Tm , \u5176\u4E2D\u6BCF\u4E2A\u96C6\u5408\u672C\u8EAB\u53C8\u662F\u4E00\u68F5\u6811, \u79F0\u4E3A\u539F\u6765\u6811\u7684 <strong>&quot;\u5B50\u6811(SubTree)&quot;</strong><img src="'+p+'" alt="\u56FE\u7247"></li></ul><p><img src="'+t+'" alt="\u56FE\u7247"></p><h3 id="\u4E8C\u53C9\u6811\u7684\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u6982\u5FF5" aria-hidden="true">#</a> \u4E8C\u53C9\u6811\u7684\u6982\u5FF5</h3><p>\u5982\u679C\u6811\u4E2D\u7684<strong>\u6BCF\u4E2A\u8282\u70B9\u6700\u591A\u53EA\u80FD\u6709\u4E24\u4E2A\u8282\u70B9</strong>, \u8FD9\u6837\u7684\u6811\u5C31\u6210\u4E3A\u4E86 <strong>&quot;\u4E8C\u53C9\u6811&quot;</strong></p><p>\u4E8C\u53C9\u6811\u7684\u5B9A\u4E49:</p><ul><li>\u4E8C\u53C9\u6811<strong>\u53EF\u4EE5\u4E3A\u7A7A</strong>, \u4E5F\u5C31\u662F<strong>\u6CA1\u6709\u8282\u70B9</strong></li><li>\u82E5\u4E0D\u4E3A\u7A7A, \u5219\u5B83\u662F<strong>\u6709\u6839\u8282\u70B9</strong> \u548C\u79F0\u4E3A<strong>\u5DE6\u5B50\u6811 TL</strong> \u548C <strong>\u53F3\u5B50\u6811 TR</strong> \u7684\u4E24\u4E2A\u4E0D\u76F8\u4EA4\u7684\u4E8C\u53C9\u6811\u7EC4\u6210</li></ul><p><strong>\u4E8C\u53C9\u6811\u7684\u4E94\u79CD\u5F62\u6001:</strong><img src="'+e+'" alt="\u56FE\u7247"></p><h3 id="\u4E8C\u53C9\u6811\u7684\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u7279\u6027" aria-hidden="true">#</a> \u4E8C\u53C9\u6811\u7684\u7279\u6027</h3><p>\u6709\u51E0\u4E2A\u6BD4\u8F83\u91CD\u8981\u7684\u7279\u6027, \u5728\u7B14\u8BD5\u9898\u8F83\u5E38\u89C1:</p><ul><li>\u4E00\u9897\u4E8C\u53C9\u6811<strong>\u7B2C i \u5C42\u7684\u6700\u5927\u8282\u70B9\u4E3A</strong> <code>2^(i-1)</code>(n &gt;= 1)</li><li>\u6DF1\u5EA6\u4E3A k \u7684\u4E8C\u53C9\u6811\u6709\u6700\u5927\u8282\u70B9\u603B\u6570\u4E3A: <code>2^k - 1</code>(n &gt;= 1)</li><li>\u5BF9<strong>\u4EFB\u4F55\u975E\u7A7A\u4E8C\u53C9\u6811 T</strong> , \u505A <strong>n0 \u8868\u793A\u53F6\u8282\u70B9\u4E2A\u4E2A\u6570</strong>, n2 \u4E3A\u5EA6\u4E3A 2 \u7684\u975E\u53F6\u8282\u70B9\u7684\u4E2A\u6570 , \u90A3\u4E48\u4E24\u8005\u6EE1\u8DB3\u5173\u7CFB <code>n0 = n2 + 1</code><img src="'+o+'" alt="\u56FE\u7247"></li></ul><h3 id="\u5B8C\u7F8E\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u7F8E\u4E8C\u53C9\u6811" aria-hidden="true">#</a> \u5B8C\u7F8E\u4E8C\u53C9\u6811</h3><p><strong>\u5B8C\u7F8E\u4E8C\u53C9\u6811 Perfect Binary tree</strong> ,\u4E5F\u79F0\u4E3A\u4E86<strong>\u6EE1\u4E8C\u53C9\u6811 Full Binary tree</strong></p><ul><li>\u5728\u4E8C\u53C9\u6811\u4E2D , \u9664\u4E86<strong>\u6700\u4E0B\u4E00\u5C42\u7684\u53F6\u8282\u70B9\u5916 , \u6BCF\u5C42\u8282\u70B9\u90FD\u6709\u4E24\u4E2A\u5B50\u8282\u70B9</strong>, \u5C31\u6784\u6210\u4E86<strong>\u6EE1\u4E8C\u53C9\u6811</strong><img src="'+c+'" alt="\u56FE\u7247"></li></ul><h3 id="\u5B8C\u5168\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u5168\u4E8C\u53C9\u6811" aria-hidden="true">#</a> \u5B8C\u5168\u4E8C\u53C9\u6811</h3><p><strong>\u5B8C\u5168\u4E8C\u53C9\u6811</strong></p><ul><li>\u9664\u4E86<strong>\u4E8C\u53C9\u6811\u7684\u6700\u540E\u4E00\u5C42\u5916, \u5176\u4ED6\u5404\u5C42\u7684\u8282\u70B9\u90FD\u8FBE\u5230\u4E86\u6700\u5927\u4E2A\u6570</strong></li><li>\u4E14<strong>\u6700\u540E\u4E00\u5C42\u4ECE\u5DE6\u5411\u53F3\u7684\u53F6\u8282\u70B9\u8FDE\u7EED\u5B58\u5728, \u53EA\u7F3A\u53F3\u4FA7\u82E5\u5E72\u8282\u70B9</strong></li><li><strong>\u5B8C\u7F8E\u4E8C\u53C9\u6811</strong>\u662F<strong>\u7279\u6B8A\u7684\u5B8C\u5168\u4E8C\u53C9\u6811</strong></li></ul><p>\u4E0B\u9762\u7684\u4E0D\u662F\u5B8C\u5168\u4E8C\u53C9\u6811, \u56E0\u4E3A D \u8282\u70B9\u8FD8\u6CA1\u6709\u53F3\u8282\u70B9, \u4F46\u662F E \u8282\u70B9\u5C31\u6709\u4E86\u5DE6\u53F3\u8282\u70B9 <img src="'+l+'" alt="\u56FE\u7247"></p><h2 id="\u4E8C\u53C9\u6811\u7684\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u5B58\u50A8" aria-hidden="true">#</a> \u4E8C\u53C9\u6811\u7684\u5B58\u50A8</h2><p><img src="'+r+'" alt="\u56FE\u7247"></p><h3 id="\u94FE\u8868\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868\u5B58\u50A8" aria-hidden="true">#</a> \u94FE\u8868\u5B58\u50A8</h3><p><img src="'+n+'" alt="\u56FE\u7247"></p><h2 id="\u4E8C\u53C9\u641C\u7D22\u6811" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u641C\u7D22\u6811" aria-hidden="true">#</a> \u4E8C\u53C9\u641C\u7D22\u6811</h2><p><strong>\u4E8C\u53C9\u641C\u7D22\u6811 (BST , Binary Search Tree)</strong> \u4E5F\u79F0 <strong>\u4E8C\u53C9\u6392\u5E8F\u6811</strong>, \u6216\u8005 <strong>\u4E8C\u63D2\u67E5\u627E\u6811</strong></p><p>\u4E8C\u53C9\u641C\u7D22\u6811\u662F\u4E00\u9897\u4E8C\u53C9\u6811, \u53EF\u4EE5\u4E3A\u7A7A</p><p>\u5982\u679C\u4E0D\u4E3A\u7A7A\u6EE1\u8DB3\u4E00\u4E0B<strong>\u6027\u8D28</strong>:</p><ul><li>\u975E\u7A7A\u5B50\u6811\u7684\u6240\u6709\u952E\u503C\u5C0F\u4E8E\u6839\u8282\u70B9\u7684\u952E\u503C</li><li>\u975E\u7A7A\u53F3\u5B50\u6811\u7684\u6240\u6709\u952E\u503C\u5927\u4E8E\u5176\u6839\u8282\u70B9\u7684\u952E\u503C</li><li>\u5DE6, \u53F3\u5B50\u6811\u672C\u8EAB\u4E5F\u90FD\u662F\u4E8C\u53C9\u641C\u7D22\u6811</li></ul><p>\u4E0B\u9762\u54EA\u4E2A\u5C5E\u4E8E\u4E8C\u53C9\u641C\u7D22\u6811? <img src="'+n+'" alt="\u56FE\u7247"></p><p>\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u7279\u70B9:</p><ul><li>\u4E8C\u53C9\u6811\u7684\u7279\u70B9\u5C31\u662F\u76F8\u5BF9<strong>\u5A07\u5C0F\u7684\u503C</strong>\u603B\u662F\u4F1A\u4FDD\u5B58\u5728<strong>\u5DE6\u8282\u70B9</strong>\u4E0A, \u76F8\u5BF9<strong>\u8F83\u5927\u7684\u503C</strong>\u603B\u662F\u4F1A\u4FDD\u5B58\u5728<strong>\u53F3\u8282\u70B9</strong>\u4E0A</li><li>\u90A3\u4E48\u5229\u7528\u8FD9\u4E2A\u7279\u70B9\u53EF\u4EE5\u505A\u4EC0\u4E48\u4E8B\u60C5\u5462?</li><li>\u67E5\u627E\u6548\u7387\u975E\u5E38\u9AD8, \u8FD9\u4E5F\u5C31\u662F<strong>\u4E8C\u53C9\u641C\u7D22\u6811</strong>\u4E2D, <strong>\u641C\u7D22\u7684\u6765\u6E90</strong></li></ul><h2 id="\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u5C01\u88C5" aria-hidden="true">#</a> \u4E8C\u53C9\u641C\u7D22\u6811\u7684\u5C01\u88C5</h2><p><img src="'+u+`" alt="\u56FE\u7247"></p><ul><li>\u5C01\u88C5 <code>BSTree</code> \u7684\u7C7B</li><li>\u8FD8\u9700\u8981\u5C01\u88C5\u7528\u4E8E\u4FDD\u5B58\u8BF6\u4E2A\u8282\u70B9\u7684\u7C7B Node</li><li>\u8BE5\u7C7B\u5305\u542B 3\u4E2A\u5C5E\u6027, : \u8282\u70B9\u5BF9\u5E94\u7684 value , \u6307\u5411\u5DE6\u5B50\u6811 left, \u6307\u5411\u53F3\u5B50\u6811 right</li><li>\u5BF9\u4E8E BSTree \u6765\u8BF4 , \u53EA\u9700\u8981\u4FDD\u5B58\u6839\u8282\u70B9\u5373\u53EF, \u56E0\u4E3A\u5176\u4ED6\u90FD\u53EF\u4EE5\u901A\u8FC7\u6839\u8282\u70B9\u8FDB\u884C\u67E5\u627E</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span> 
  left<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span>  <span class="token keyword">null</span>
  right<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">BSTree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 

  <span class="token comment">// \u4E8C\u53C9\u6811\u76F8\u5173\u7684\u4E00\u4E9B\u5176\u4ED6\u65B9\u6CD5</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="\u5E38\u89C1\u7684\u4E00\u4E9B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C1\u7684\u4E00\u4E9B\u65B9\u6CD5" aria-hidden="true">#</a> \u5E38\u89C1\u7684\u4E00\u4E9B\u65B9\u6CD5</h3><p><img src="`+k+`" alt="\u56FE\u7247"></p><h3 id="\u63D2\u5165\u64CD\u4F5C\u548C\u6253\u5370\u5C55\u793A" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u64CD\u4F5C\u548C\u6253\u5370\u5C55\u793A" aria-hidden="true">#</a> \u63D2\u5165\u64CD\u4F5C\u548C\u6253\u5370\u5C55\u793A</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> hy-algokit
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> btPrint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;hy-algokit&#39;</span> <span class="token comment">// \u5F15\u5165\u6253\u5370bst\u6811\u7684\u51FD\u6570</span>
<span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span> 
  left<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span>  <span class="token keyword">null</span>
  right<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">BSTree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u63A7\u5236\u53F0\u6253\u5370\u6811\u7684\u7ED3\u6784</span>
    <span class="token function">btPrint</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">private</span> <span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> newNode<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5355\u72EC\u5C01\u88C5\u63D2\u5165\u8282\u70B9\u7684\u6B65\u9AA4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newNode<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> node<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u53BB\u5DE6\u8FB9\u627E\u7A7A\u767D\u4F4D\u7F6E</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// Node \u8282\u70B9\u7684\u5DE6\u8FB9\u5DF2\u7ECF\u662F\u7A7A\u767D</span>
        node<span class="token punctuation">.</span>left <span class="token operator">=</span> newNode
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token punctuation">,</span> newNode<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">//\u53BB\u53F3\u8FB9\u7EE7\u7EED\u67E5\u627E\u7A7A\u767D\u4F4D\u7F6E</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        node<span class="token punctuation">.</span>right <span class="token operator">=</span> newNode
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token punctuation">,</span> newNode<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>


  <span class="token comment">// \u4E8C\u53C9\u6811\u76F8\u5173\u7684\u4E00\u4E9B\u5176\u4ED6\u65B9\u6CD5</span>
  <span class="token doc-comment comment">/** \u63D2\u5165\u6570\u636E\u7684\u64CD\u4F5C */</span>
  <span class="token function">insert</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1. \u6839\u636E\u4F20\u5165\u7684 value \u521B\u5EFA Node \u8282\u70B9</span>
    <span class="token keyword">const</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token comment">// 2. \u5224\u65AD\u5F53\u524D\u662F\u5426\u5DF2\u7ECF\u6709\u6839\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6839\u8282\u70B9\u4E3A\u7A7A</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> newNode
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u6811\u4E2D\u5DF2\u7ECF\u4E3A\u5176\u4ED6\u503C</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token punctuation">,</span>newNode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BSTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6267\u884C\u6253\u5370\u51FD\u6570</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br></div></div><p><img src="`+i+'" alt="\u56FE\u7247"></p><h3 id="\u904D\u5386\u4E8C\u53C9\u641C\u7D22\u6811" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386\u4E8C\u53C9\u641C\u7D22\u6811" aria-hidden="true">#</a> \u904D\u5386\u4E8C\u53C9\u641C\u7D22\u6811</h3><p><strong>\u6811\u7684\u904D\u5386</strong>:</p><ul><li>\u904D\u5386\u4E00\u68F5\u6811\u662F\u6307\u8BBF\u95EE\u6811\u7684\u6BCF\u4E2A\u8282\u70B9(\u4E5F\u53EF\u4EE5\u5BF9\u6BCF\u4E2A\u8282\u70B9\u8FDB\u884C\u67D0\u4E9B\u64CD\u4F5C, \u5F53\u7136\u8FD9\u91CC\u5C31\u505A\u7B80\u5355\u7684\u4E00\u4E2A\u6253\u5370)</li><li>\u4F46\u662F\u6811 \u548C \u7EBF\u6027\u7ED3\u6784\u4E0D\u592A\u4E00\u6837, \u7EBF\u6027\u7ED3\u6784\u901A\u5E38\u6309\u7167\u4ECE\u524D\u5230\u540E\u7684\u987A\u5E8F, \u4F46\u662F\u6811\u5462?</li><li>\u5E94\u8BE5\u662F\u4ECE\u6811\u7684\u9876\u7AEF\u5F00\u59CB\u8FD8\u662F\u5E95\u7AEF\u5F00\u59CB\u5462 ? \u4ECE\u5DE6\u5F00\u59CB\u8FD8\u662F \u4ECE\u53F3\u5F00\u59CB\u5462?</li></ul><p>\u4E8C\u53C9\u6811\u5E38\u89C1\u7684\u904D\u5386\u65B9\u5F0F\u6709\u56DB\u79CD:</p><ul><li><strong>\u5148\u5E8F\u904D\u5386 preOrderTraverse</strong></li><li><strong>\u4E2D\u5E8F\u904D\u5386 inOrderTraverse</strong></li><li><strong>\u540E\u5E8F\u904D\u5386</strong></li><li><strong>\u5C42\u5E8F\u904D\u5386 levelOrderTraverse</strong></li></ul><h3 id="\u5148\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5148\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u5148\u5E8F\u904D\u5386</h3><p><strong>\u904D\u5386\u8FC7\u7A0B\u4E3A:</strong></p><ol><li>\u8BBF\u95EE\u6839\u8282\u70B9</li><li>\u5148\u5E8F\u904D\u5386\u5176\u5DE6\u5B50\u6811</li><li>\u5148\u5E8F\u904D\u5386\u5176\u53F3\u5B50\u6811</li></ol><p><img src="'+b+`" alt="\u56FE\u7247"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> btPrint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;hy-algokit&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span> 
  left<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span>  <span class="token keyword">null</span>
  right<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">BSTree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u63A7\u5236\u53F0\u6253\u5370\u6811\u7684\u7ED3\u6784</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">private</span> <span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> newNode<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4E8C\u53C9\u6811\u76F8\u5173\u7684\u4E00\u4E9B\u5176\u4ED6\u65B9\u6CD5</span>
  <span class="token doc-comment comment">/** \u63D2\u5165\u6570\u636E\u7684\u64CD\u4F5C */</span>
  <span class="token function">insert</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5148\u5E8F\u904D\u5386</span>
  <span class="token function">preOrderTraverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preOrderTraverseNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">private</span> <span class="token function">preOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span>    <span class="token comment">// \u9012\u5F52</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span>   <span class="token comment">// \u9012\u5F52</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BSTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

bst<span class="token punctuation">.</span><span class="token function">preOrderTraverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5148\u5E8F\u904D\u5386 11 7 5 3 6 9 8 10 15 13 12 14 20 18 25</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><h3 id="\u4E2D\u5E8F\u904D\u5386\u548C\u540E\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u4E2D\u5E8F\u904D\u5386\u548C\u540E\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u4E2D\u5E8F\u904D\u5386\u548C\u540E\u5E8F\u904D\u5386</h3><p><strong>\u4E2D\u5E8F\u904D\u5386</strong>\u8FC7\u7A0B:</p><ul><li>\u4E2D\u5E8F\u904D\u5386\u5DE6\u5B50\u6811</li><li>\u8BBF\u95EE\u6839\u8282\u70B9</li><li>\u4E2D\u5E8F\u904D\u5386\u53F3\u5B50\u6811 <img src="`+m+'" alt="\u56FE\u7247"></li></ul><p><strong>\u540E\u5E8F\u904D\u5386</strong>\u8FC7\u7A0B:</p><ul><li>\u540E\u5E8F\u904D\u5386\u5176\u53F3\u5B50\u6811</li><li>\u540E\u5E8F\u904D\u5386\u5176\u5DE6\u5B50\u6811</li><li>\u8BBF\u95EE\u6839\u8282\u70B9 <img src="'+d+`" alt="\u56FE\u7247"></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> btPrint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;hy-algokit&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span> 
  left<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span>  <span class="token keyword">null</span>
  right<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">BSTree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u63A7\u5236\u53F0\u6253\u5370\u6811\u7684\u7ED3\u6784</span>
    <span class="token function">btPrint</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">private</span> <span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> newNode<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4E8C\u53C9\u6811\u76F8\u5173\u7684\u4E00\u4E9B\u5176\u4ED6\u65B9\u6CD5</span>
  <span class="token doc-comment comment">/** \u63D2\u5165\u6570\u636E\u7684\u64CD\u4F5C */</span>
  <span class="token function">insert</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5148\u5E8F\u904D\u5386</span>
  <span class="token function">preOrderTraverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preOrderTraverseNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">private</span> <span class="token function">preOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4E2D\u5E8F\u904D\u5386 </span>
  <span class="token function">inOrderTraverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">inOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

   <span class="token comment">// \u540E\u7EED\u904D\u5386 </span>
  <span class="token function">postOrderTraverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">postOrderTraverseNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">postOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">postOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">postOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BSTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

bst<span class="token punctuation">.</span><span class="token function">preOrderTraverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br></div></div><h3 id="\u5C42\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5C42\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u5C42\u5E8F\u904D\u5386</h3><ul><li>\u4ECE\u4E0A\u5411\u4E0B\u9010\u5C42\u904D\u5386</li><li>\u5C42\u5E8F\u904D\u5386\u901A\u5E38\u4F1A\u501F\u52A9\u4E8E <strong>\u961F\u5217</strong> \u6765\u5B8C\u6210 <ul><li>\u4E5F\u662F\u961F\u5217\u7684\u4E00\u4E2A\u7ECF\u5178\u5E94\u7528\u573A\u666F</li></ul></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> btPrint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;hy-algokit&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span> 
  left<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span>  <span class="token keyword">null</span>
  right<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">BSTree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u63A7\u5236\u53F0\u6253\u5370\u6811\u7684\u7ED3\u6784</span>
    <span class="token function">btPrint</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token operator">...</span>
  <span class="token comment">// \u5C42\u5E8F\u904D\u5386</span>
  <span class="token function">levelOrderTraverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>

    <span class="token keyword">const</span> queue<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span> <span class="token constant">T</span> <span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u7528\u6570\u7EC4\u6A21\u62DF\u4E00\u4E0B\u961F\u5217</span>
    queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token comment">// \u7B2C\u4E00\u4E2A\u8282\u70B9\u662F\u6839\u8282\u70B9</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
      <span class="token comment">// \u8BBF\u95EE\u8282\u70B9\u7684\u8FC7\u7A0B</span>
      <span class="token keyword">let</span> current <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> 
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> 
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="\u83B7\u53D6\u6700\u5927\u503C\u6216\u6700\u5C0F\u503C" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u6700\u5927\u503C\u6216\u6700\u5C0F\u503C" aria-hidden="true">#</a> \u83B7\u53D6\u6700\u5927\u503C\u6216\u6700\u5C0F\u503C</h3><p>\u5728\u6811\u7ED3\u6784\u83B7\u53D6\u6700\u5927\u503C\u6216\u6700\u5C0F\u503C\u6BD4\u8F83\u7B80\u5355 <img src="`+g+`" alt="\u56FE\u7247"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> btPrint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;hy-algokit&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span> 
  left<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span>  <span class="token keyword">null</span>
  right<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">BSTree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
  <span class="token operator">...</span>

  <span class="token comment">// \u83B7\u53D6\u6700\u5927\u503C</span>
  <span class="token function">getMaxValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span> 
    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root  
    <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      current <span class="token operator">=</span> current<span class="token punctuation">.</span>right
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> current<span class="token punctuation">.</span>value
  <span class="token punctuation">}</span> 
   <span class="token comment">// \u83B7\u53D6\u6700\u5C0F\u503C</span>
  <span class="token function">getMinValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span> 
    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root  
    <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      current <span class="token operator">=</span> current<span class="token punctuation">.</span>left
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> current<span class="token punctuation">.</span>value
  <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BSTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="\u641C\u7D22\u7279\u5B9A\u503C\u5B58\u4E0D\u5B58\u5728" tabindex="-1"><a class="header-anchor" href="#\u641C\u7D22\u7279\u5B9A\u503C\u5B58\u4E0D\u5B58\u5728" aria-hidden="true">#</a> \u641C\u7D22\u7279\u5B9A\u503C\u5B58\u4E0D\u5B58\u5728</h3><p>\u601D\u8DEF:</p><ul><li>\u5224\u65AD\u62FF\u5230\u7684\u8282\u70B9\u662F\u5426\u662F\u641C\u7D22\u7684\u8282\u70B9 <ul><li>\u5982\u679C\u662F, \u76F4\u63A5\u8FD4\u56DE true</li><li>\u5982\u679C\u4E0D\u662F <ul><li>\u8981\u641C\u7D22\u7684\u8282\u70B9\u6BD4\u5F53\u524D\u8282\u70B9\u8981\u5927 , \u53BB\u53F3\u8FB9\u627E</li><li>\u8981\u641C\u7D22\u7684\u8282\u70B9\u6BD4\u5F53\u524D\u8282\u70B9\u8981\u5C0F , \u53BB\u5DE6\u8FB9\u627E</li></ul></li></ul></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> btPrint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;hy-algokit&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span> 
  left<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span>  <span class="token keyword">null</span>
  right<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">BSTree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
  <span class="token operator">...</span>
  <span class="token comment">// \u641C\u7D22\u503C, \u627E\u5230\u5C31\u8FD4\u56DE true</span>
  <span class="token function">search</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root
    <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>value <span class="token operator">===</span> value<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span> 

      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>right
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>left
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BSTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h3 id="\u5220\u9664\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u64CD\u4F5C" aria-hidden="true">#</a> \u5220\u9664\u64CD\u4F5C</h3><p>\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u5220\u9664\u6709\u70B9\u590D\u6742, \u9700\u8981\u4E00\u70B9\u4E00\u70B9\u6765\u5B8C\u6210</p><p>\u5220\u9664\u8282\u70B9\u8981\u4ECE\u67E5\u627E\u8981\u5220\u9664\u7684\u8282\u70B9\u5F00\u59CB, \u627E\u5230\u8282\u70B9\u540E\u9700\u8981\u8003\u8651 \u4E09\u79CD\u60C5\u51B5:</p><ol><li>\u8BE5\u8282\u70B9\u662F\u53F6\u8282\u70B9(\u6CA1\u6709\u5B50\u8282\u70B9, \u6BD4\u8F83\u7B80\u5355)</li><li>\u8BE5\u8282\u70B9\u53EA\u6709\u4E00\u4E2A\u5B50\u8282\u70B9(\u4E5F\u6BD4\u8F83\u7B80\u5355)</li><li>\u8BE5\u8282\u70B9\u6709\u4E24\u4E2A\u5B50\u8282\u70B9(\u60C5\u51B5\u6BD4\u8F83\u590D\u6742)</li></ol><p>\u5148\u4ECE\u67E5\u627E\u8981\u5220\u9664\u7684\u8282\u70B9\u5165\u624B</p><ol><li>\u5148\u627E\u5230\u8981\u5220\u9664\u7684\u8282\u70B9, \u5982\u679C\u6CA1\u6709\u627E\u5230, \u5C31\u4E0D\u9700\u8981\u5220\u9664</li><li>\u627E\u5230\u8981\u5220\u9664\u7684\u8282\u70B9 <ul><li>\u5220\u9664\u53F6\u5B50\u7ED3\u70B9</li><li>\u5220\u9664\u53EA\u6709\u4E00\u4E2A\u5B50\u8282\u70B9\u7684\u8282\u70B9</li><li>\u5220\u9664\u6709\u4E24\u4E2A\u5B50\u8282\u70B9\u7684\u8282\u70B9</li></ul></li></ol><h4 id="\u67E5\u627E\u5F53\u524D\u8282\u70B9\u548C\u5176\u7236\u8282\u70B9\u7684\u4FE1\u606F" tabindex="-1"><a class="header-anchor" href="#\u67E5\u627E\u5F53\u524D\u8282\u70B9\u548C\u5176\u7236\u8282\u70B9\u7684\u4FE1\u606F" aria-hidden="true">#</a> \u67E5\u627E\u5F53\u524D\u8282\u70B9\u548C\u5176\u7236\u8282\u70B9\u7684\u4FE1\u606F</h4><p><strong>\u5220\u9664\u8282\u70B9</strong>\u65F6 , \u9700\u8981\u8003\u8651\u7684\u60C5\u51B5:</p><p><img src="`+y+`" alt="\u56FE\u7247"></p><p>\u91CD\u6784\u4E00\u4E0B\u4E0A\u9762\u7684\u4EE3\u7801, \u62FF\u5230 <strong>\u5F53\u524D\u7684\u8282\u70B9</strong> \u548C <strong>\u5F53\u524D\u8282\u70B9\u7684\u7236\u8282\u70B9</strong> \u548C <strong>\u5F53\u524D\u8282\u70B9\u65F6\u7236\u8282\u70B9\u7684\u5DE6\u8282\u70B9\u8FD8\u662F\u53F3\u8282\u70B9</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> btPrint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;hy-algokit&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span> 
  left<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span>  <span class="token keyword">null</span>
  right<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
  <span class="token comment">// \u7236\u8282\u70B9</span>
  parent<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>

  <span class="token comment">// \u5224\u65AD\u662F\u5DE6\u8282\u70B9 \u8FD8\u662F\u53F3\u8282\u70B9</span>
  <span class="token keyword">get</span> <span class="token function">isLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">get</span> <span class="token function">isRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>right <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">BSTree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
  
  <span class="token operator">...</span>
  <span class="token comment">// \u5355\u72EC\u5C01\u88C5\u4E00\u4E2A \u67E5\u627E\u8282\u70B9/\u8282\u70B9\u7684\u7236\u8282\u70B9 \u7684\u65B9\u6CD5</span>
  <span class="token keyword">private</span> <span class="token function">searchNode</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root
    <span class="token keyword">let</span> parent<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u662F\u67E5\u627E\u7684\u8282\u70B9, \u5C31\u76F4\u63A5\u8FD4\u56DE</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>value <span class="token operator">===</span> value<span class="token punctuation">)</span> <span class="token keyword">return</span> current 
      <span class="token comment">// \u7EE7\u7EED\u5F80\u4E0B\u627E</span>
      parent <span class="token operator">=</span> current
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>right  
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span>  current<span class="token punctuation">.</span>left
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5982\u679C current \u6709\u503C . \u90A3\u4E48\u5728\u5F53\u524D\u7684\u8282\u70B9\u81EA\u5DF1\u7684\u7236\u8282\u70B9</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent <span class="token operator">=</span> parent
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u641C\u7D22\u503C, \u627E\u5230\u5C31\u8FD4\u56DE true</span>
  <span class="token function">search</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchNode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">remove</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1. \u641C\u7D22\u5BF9\u5E94\u7684\u5F53\u524D\u63A5\u5F85\u60A8</span>
    <span class="token keyword">const</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchNode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token comment">// 2. \u8FD9\u91CC\u53EF\u4EE5\u62FF\u5230 3\u4E2A\u4FE1\u606F: \u5F53\u524D\u8282\u70B9, \u5F53\u524D\u8282\u70B9\u7684\u7236\u8282\u70B9 , \u662F\u5426\u662F\u5DE6\u8282\u70B9/\u53F3\u8282\u70B9 </span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F53\u524D\u7684\u8282\u70B9:&#39;</span> <span class="token operator">+</span> current<span class="token operator">?.</span>value<span class="token punctuation">,</span> <span class="token string">&#39;\u7236\u8282\u70B9: &#39;</span> <span class="token operator">+</span> current<span class="token operator">?.</span>parent<span class="token operator">?.</span>value<span class="token punctuation">)</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>current<span class="token operator">?.</span>isLeft <span class="token punctuation">,</span> current<span class="token operator">?.</span>isRight<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BSTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// console.log(bst.search(8)) // true</span>
<span class="token comment">// console.log(bst.search(13)) // true</span>
<span class="token comment">// console.log(bst.search(12)) // true</span>
<span class="token comment">// console.log(bst.search(100)) // false</span>

bst<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>  <span class="token comment">// \u5F53\u524D\u7684\u8282\u70B9:8 \u7236\u8282\u70B9: 9</span>
bst<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span> <span class="token comment">// \u5F53\u524D\u7684\u8282\u70B9:13 \u7236\u8282\u70B9: 15</span>
bst<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token comment">// \u5F53\u524D\u7684\u8282\u70B9:12 \u7236\u8282\u70B9: 13</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div><h4 id="\u60C5\u51B5\u4E00-\u6CA1\u6709\u5B50\u8282\u70B9-\u53F6\u5B50\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u60C5\u51B5\u4E00-\u6CA1\u6709\u5B50\u8282\u70B9-\u53F6\u5B50\u8282\u70B9" aria-hidden="true">#</a> \u60C5\u51B5\u4E00: \u6CA1\u6709\u5B50\u8282\u70B9 - \u53F6\u5B50\u8282\u70B9</h4><p>\u60C5\u51B5\u4E00 : \u5220\u9664\u53F6\u8282\u70B9</p><ul><li>\u8FD9\u79CD\u60C5\u51B5\u6BD4\u8F83\u7B80\u5355, \u9700\u8981\u68C0\u6D4B current \u8282\u70B9\u7684 left \u548C right \u662F\u5426\u4E3A <code>null</code></li><li>\u90FD\u4E3A null \u7684\u60C5\u51B5\u4E0B, \u8FD8\u9700\u8981\u68C0\u6D4B\u4E00\u4E2A\u4E1C\u897F, \u5C31\u662F\u662F\u5426 current \u8282\u70B9\u662F\u6839\u8282\u70B9, \u5982\u679C\u4E3A\u6839\u8282\u70B9 ,\u90A3\u4E48\u76F4\u63A5\u628A this.root = null</li><li>\u5426\u5219\u5C31\u628A\u7236\u8282\u70B9\u7684 left \u6216\u8005 right \u8BBE\u7F6E\u4E3A null \u5373\u53EF</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> btPrint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;hy-algokit&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span> 
  left<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span>  <span class="token keyword">null</span>
  right<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
  <span class="token comment">// \u7236\u8282\u70B9</span>
  parent<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>

  <span class="token comment">// \u5224\u65AD\u662F\u5DE6\u8282\u70B9 \u8FD8\u662F\u53F3\u8282\u70B9</span>
  <span class="token keyword">get</span> <span class="token function">isLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">get</span> <span class="token function">isRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>right <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">BSTree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u63A7\u5236\u53F0\u6253\u5370\u6811\u7684\u7ED3\u6784</span>
    <span class="token function">btPrint</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token operator">...</span>

  <span class="token comment">// \u5355\u72EC\u5C01\u88C5\u4E00\u4E2A \u67E5\u627E\u8282\u70B9/\u8282\u70B9\u7684\u7236\u8282\u70B9 \u7684\u65B9\u6CD5</span>
  <span class="token keyword">private</span> <span class="token function">searchNode</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root
    <span class="token keyword">let</span> parent<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u662F\u67E5\u627E\u7684\u8282\u70B9, \u5C31\u76F4\u63A5\u8FD4\u56DE</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>value <span class="token operator">===</span> value<span class="token punctuation">)</span> <span class="token keyword">return</span> current 
      <span class="token comment">// \u7EE7\u7EED\u5F80\u4E0B\u627E</span>
      parent <span class="token operator">=</span> current
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>right  
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span>  current<span class="token punctuation">.</span>left
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5982\u679C current \u6709\u503C . \u90A3\u4E48\u4FDD\u5B58\u81EA\u5DF1\u7684\u7236\u8282\u70B9</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent <span class="token operator">=</span> parent
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u641C\u7D22\u503C, \u627E\u5230\u5C31\u8FD4\u56DE true</span>
  <span class="token function">search</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchNode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5220\u9664\u8282\u70B9</span>
  <span class="token function">remove</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchNode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token comment">// 1. \u6CA1\u627E\u5230</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>current<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
    
    <span class="token comment">// console.log(&#39;\u5F53\u524D\u7684\u8282\u70B9:&#39; + current?.value, &#39;\u7236\u8282\u70B9: &#39; + current?.parent?.value)</span>
    <span class="token comment">// console.log(current?.isLeft , current?.isRight)</span>

    <span class="token comment">//  2. \u6CA1\u6709\u5B50\u8282\u70B9\u7684\u60C5\u51B5, \u4E5F\u5C31\u662F \u53F6\u5B50\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>left <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> current<span class="token punctuation">.</span>right <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u5F53\u524D\u8282\u70B9\u662F\u6839\u8282\u70B9</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>isLeft<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 3. \u53EA\u6709\u4E00\u4E2A\u5B50\u8282\u70B9 </span>


    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BSTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// console.log(bst.search(8)) // true</span>
<span class="token comment">// console.log(bst.search(13)) // true</span>
<span class="token comment">// console.log(bst.search(12)) // true</span>
<span class="token comment">// console.log(bst.search(100)) // false</span>

<span class="token comment">// bst.remove(8)  // \u5F53\u524D\u7684\u8282\u70B9:8 \u7236\u8282\u70B9: 9</span>
<span class="token comment">// bst.remove(13) // \u5F53\u524D\u7684\u8282\u70B9:13 \u7236\u8282\u70B9: 15</span>
<span class="token comment">// bst.remove(12) // \u5F53\u524D\u7684\u8282\u70B9:12 \u7236\u8282\u70B9: 13</span>

bst<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br></div></div><p><img src="`+w+'" alt="\u56FE\u7247"></p><h4 id="\u60C5\u51B5\u4E8C-\u4E00\u4E2A\u5B50\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u60C5\u51B5\u4E8C-\u4E00\u4E2A\u5B50\u8282\u70B9" aria-hidden="true">#</a> \u60C5\u51B5\u4E8C : \u4E00\u4E2A\u5B50\u8282\u70B9</h4><p><img src="'+h+'" alt="\u56FE\u7247"></p><p><img src="'+f+`" alt="\u56FE\u7247"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> btPrint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;hy-algokit&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span> 
  left<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span>  <span class="token keyword">null</span>
  right<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
  <span class="token comment">// \u7236\u8282\u70B9</span>
  parent<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>

  <span class="token comment">// \u5224\u65AD\u662F\u5DE6\u8282\u70B9 \u8FD8\u662F\u53F3\u8282\u70B9</span>
  <span class="token keyword">get</span> <span class="token function">isLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">get</span> <span class="token function">isRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>right <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">BSTree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
  <span class="token operator">...</span>

  <span class="token comment">// \u5355\u72EC\u5C01\u88C5\u4E00\u4E2A \u67E5\u627E\u8282\u70B9/\u8282\u70B9\u7684\u7236\u8282\u70B9 \u7684\u65B9\u6CD5</span>
  <span class="token keyword">private</span> <span class="token function">searchNode</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root
    <span class="token keyword">let</span> parent<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u662F\u67E5\u627E\u7684\u8282\u70B9, \u5C31\u76F4\u63A5\u8FD4\u56DE</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>value <span class="token operator">===</span> value<span class="token punctuation">)</span> <span class="token keyword">return</span> current 
      <span class="token comment">// \u7EE7\u7EED\u5F80\u4E0B\u627E</span>
      parent <span class="token operator">=</span> current
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>right  
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span>  current<span class="token punctuation">.</span>left
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5982\u679C current \u6709\u503C . \u90A3\u4E48\u4FDD\u5B58\u81EA\u5DF1\u7684\u7236\u8282\u70B9</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent <span class="token operator">=</span> parent
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u641C\u7D22\u503C, \u627E\u5230\u5C31\u8FD4\u56DE true</span>
  <span class="token function">search</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchNode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">remove</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchNode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>current<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
    
    <span class="token comment">// console.log(&#39;\u5F53\u524D\u7684\u8282\u70B9:&#39; + current?.value, &#39;\u7236\u8282\u70B9: &#39; + current?.parent?.value)</span>
    <span class="token comment">// console.log(current?.isLeft , current?.isRight)</span>

    <span class="token comment">//  2. \u5220\u9664\u53F6\u5B50\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>left <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> current<span class="token punctuation">.</span>right <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>isLeft<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 3. \u53EA\u6709\u4E00\u4E2A\u8282\u70B9\u7684\u60C5\u51B5</span>
    <span class="token comment">// (1) \u53EA\u6709\u5DE6\u8282\u70B9</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>right <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> current<span class="token punctuation">.</span>left
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>isLeft<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>left <span class="token operator">=</span> current<span class="token punctuation">.</span>left
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>right <span class="token operator">=</span> current<span class="token punctuation">.</span>left
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>left <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> current<span class="token punctuation">.</span>right
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>isLeft<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>left <span class="token operator">=</span> current<span class="token punctuation">.</span>right
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>right <span class="token operator">=</span> current<span class="token punctuation">.</span>right
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BSTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br></div></div><h4 id="\u60C5\u51B5\u4E09-\u6709\u4E24\u4E2A\u5B50\u8282\u70B9\u7684\u60C5\u51B5" tabindex="-1"><a class="header-anchor" href="#\u60C5\u51B5\u4E09-\u6709\u4E24\u4E2A\u5B50\u8282\u70B9\u7684\u60C5\u51B5" aria-hidden="true">#</a> \u60C5\u51B5\u4E09 :\u6709\u4E24\u4E2A\u5B50\u8282\u70B9\u7684\u60C5\u51B5</h4><p><img src="`+v+`" alt="\u56FE\u7247"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> btPrint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;hy-algokit&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token constant">T</span> 
  left<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span>  <span class="token keyword">null</span>
  right<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
  <span class="token comment">// \u7236\u8282\u70B9</span>
  parent<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>

  <span class="token comment">// \u5224\u65AD\u662F\u5DE6\u8282\u70B9 \u8FD8\u662F\u53F3\u8282\u70B9</span>
  <span class="token keyword">get</span> <span class="token function">isLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">get</span> <span class="token function">isRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>right <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">BSTree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> root<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
   
  <span class="token operator">...</span>
  <span class="token comment">// \u5355\u72EC\u5C01\u88C5\u4E00\u4E2A \u67E5\u627E\u8282\u70B9/\u8282\u70B9\u7684\u7236\u8282\u70B9 \u7684\u65B9\u6CD5</span>
  <span class="token keyword">private</span> <span class="token function">searchNode</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root
    <span class="token keyword">let</span> parent<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u662F\u67E5\u627E\u7684\u8282\u70B9, \u5C31\u76F4\u63A5\u8FD4\u56DE</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>value <span class="token operator">===</span> value<span class="token punctuation">)</span> <span class="token keyword">return</span> current 
      <span class="token comment">// \u7EE7\u7EED\u5F80\u4E0B\u627E</span>
      parent <span class="token operator">=</span> current
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>right  
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span>  current<span class="token punctuation">.</span>left
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5982\u679C current \u6709\u503C . \u90A3\u4E48\u4FDD\u5B58\u81EA\u5DF1\u7684\u7236\u8282\u70B9</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent <span class="token operator">=</span> parent
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u641C\u7D22\u503C, \u627E\u5230\u5C31\u8FD4\u56DE true</span>
  <span class="token function">search</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchNode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u83B7\u53D6\u540E\u7EE7\u8282\u70B9</span>
  <span class="token keyword">private</span> <span class="token function">getSuccessor</span><span class="token punctuation">(</span>delNode<span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span>TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u53F3\u5B50\u6811</span>
    <span class="token keyword">let</span> current <span class="token operator">=</span> delNode<span class="token punctuation">.</span>right
    <span class="token keyword">let</span> successor<span class="token operator">:</span> TreeNode<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
    
    <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      successor <span class="token operator">=</span> current
      current <span class="token operator">=</span> current<span class="token punctuation">.</span>left
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent <span class="token operator">=</span> successor
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u62FF\u5230\u4E86\u540E\u7EE7\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>successor <span class="token operator">!==</span> delNode<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      successor<span class="token operator">!</span><span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>left <span class="token operator">=</span> successor<span class="token operator">!</span><span class="token punctuation">.</span>right
      successor<span class="token operator">!</span><span class="token punctuation">.</span>right <span class="token operator">=</span> delNode<span class="token punctuation">.</span>right
    <span class="token punctuation">}</span>

    <span class="token comment">// \u4E00\u5B9A\u8981\u8FDB\u884C\u7684\u64CD\u4F5C: \u5C06\u5220\u9664\u8282\u70B9\u7684 left , \u8D4B\u503C\u7ED9\u540E\u7EE7\u8282\u70B9\u7684left </span>
    successor<span class="token operator">!</span><span class="token punctuation">.</span>left <span class="token operator">=</span> delNode<span class="token punctuation">.</span>left
    <span class="token keyword">return</span> successor<span class="token operator">!</span>
  <span class="token punctuation">}</span>
  <span class="token function">remove</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchNode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>current<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
    
    <span class="token comment">// console.log(&#39;\u5F53\u524D\u7684\u8282\u70B9:&#39; + current?.value, &#39;\u7236\u8282\u70B9: &#39; + current?.parent?.value)</span>
    <span class="token comment">// console.log(current?.isLeft , current?.isRight)</span>

    <span class="token comment">//  2. \u5220\u9664\u53F6\u5B50\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>left <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> current<span class="token punctuation">.</span>right <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>isLeft<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//</span>

    <span class="token comment">// 3. \u53EA\u6709\u4E00\u4E2A\u8282\u70B9\u7684\u60C5\u51B5</span>
    <span class="token comment">// (1) \u53EA\u6709\u5DE6\u8282\u70B9</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>right <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> current<span class="token punctuation">.</span>left
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>isLeft<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>left <span class="token operator">=</span> current<span class="token punctuation">.</span>left
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>right <span class="token operator">=</span> current<span class="token punctuation">.</span>left
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
      <span class="token comment">// (2) \u53EA\u6709\u53F3\u8282\u70B9</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>left <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> current<span class="token punctuation">.</span>right
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>isLeft<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>left <span class="token operator">=</span> current<span class="token punctuation">.</span>right
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>right <span class="token operator">=</span> current<span class="token punctuation">.</span>right
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
      <span class="token comment">//4. \u6709\u4E24\u4E2A\u8282\u70B9</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> successor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getSuccessor</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> successor
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>isLeft<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>left <span class="token operator">=</span> successor
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        current<span class="token punctuation">.</span>parent<span class="token operator">!</span><span class="token punctuation">.</span>right <span class="token operator">=</span> successor
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BSTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
bst<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br></div></div><p><img src="`+T+'" alt="\u56FE\u7247"></p><h2 id="\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u7F3A\u9677" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u7F3A\u9677" aria-hidden="true">#</a> \u4E8C\u53C9\u641C\u7D22\u6811\u7684\u7F3A\u9677</h2><p><strong>\u4E8C\u53C9\u641C\u7D22\u6811\u4F5C\u4E3A\u6570\u636E\u5B58\u50A8\u7684\u7ED3\u6784\u6709\u91CD\u8981\u7684\u4F18\u52BF</strong></p><ul><li>\u53EF\u4EE5<strong>\u5FEB\u901F</strong>\u7684\u627E\u5230\u7ED9\u5B9A\u5173\u952E\u5B57\u7684\u6570\u636E\u9879, \u5E76\u4E14\u53EF\u4EE5\u5FEB\u901F\u7684<strong>\u63D2\u5165\u548C\u5220\u9664\u6570\u636E\u9879</strong></li></ul><p><strong>\u4F46\u662F, \u4E8C\u53C9\u641C\u7D22\u6811\u6709\u4E00\u4E2A\u5F88\u9EBB\u70E6\u7684\u95EE\u9898</strong></p><ul><li>\u5982\u679C\u63D2\u5165\u7684\u6570\u636E\u662F\u4E00\u4E2A\u6709\u5E8F\u7684\u6570\u636E, \u6BD4\u5982\u4E0B\u9762\u7684\u60C5\u51B5</li><li>\u6709\u4E00\u9897\u521D\u59CB\u7684\u6570\u636E\u4E3A 9 8 12 \u7684\u4E8C\u53C9\u6811</li><li>\u63D2\u5165\u4E86\u4E0B\u9762\u7684\u6570\u636E 7 6 5 4 3</li></ul><p><img src="'+N+'" alt="\u56FE\u7247"></p><p><strong>\u975E\u5E73\u8861\u6811:</strong></p><ul><li>\u6BD4\u8F83\u597D\u7684\u4E8C\u53C9\u641C\u7D22\u6811\u6570\u636E\u5E94\u8BE5\u662F<strong>\u5DE6\u53F3\u5206\u5E03\u5747\u5300</strong>\u7684</li><li>\u4F46\u662F\u63D2\u5165<strong>\u8FDE\u7EED\u6570\u636E</strong>\u540E , \u5206\u5E03\u7684\u4E0D\u5747\u5300, \u79F0\u8FD9\u79CD\u6811\u4E3A <strong>\u975E\u5E73\u8861\u6811</strong></li><li>\u5BF9\u4E8E\u4E00\u9897<strong>\u5E73\u8861\u4E8C\u53C9\u6811</strong>\u6765\u8BF4 , \u63D2\u5165/\u67E5\u627E\u7B49\u64CD\u4F5C\u7684\u6548\u7387\u662F <code>O(logN)</code></li><li>\u5BF9\u4E8E\u4E00\u9897<strong>\u975E\u5E73\u8861\u4E8C\u53C9\u6811</strong>, \u76F8\u5F53\u4E8E\u7F16\u5199\u4E86\u4E00\u4E2A\u94FE\u8868, \u67E5\u627E\u6548\u7387\u53D8\u6210\u4E86 <code>O(N)</code></li></ul><h3 id="\u6811\u7684\u5E73\u8861\u6027" tabindex="-1"><a class="header-anchor" href="#\u6811\u7684\u5E73\u8861\u6027" aria-hidden="true">#</a> \u6811\u7684\u5E73\u8861\u6027</h3><p>\u4E3A\u4E86\u80FD\u4EE5\u8F83\u5FEB\u7684\u65F6\u95F4<code>O(logN)</code>\u6765\u64CD\u4F5C\u4E00\u9897\u6811, \u9700\u8981\u4FDD\u8BC1\u6811\u662F\u5E73\u8861\u7684</p><ul><li>\u81F3\u5C11\u5927\u90E8\u5206\u662F\u5E73\u8861\u7684, \u90A3\u4E48\u65F6\u95F4\u590D\u6742\u5EA6\u4E5F\u662F\u63A5\u8FD1\u4E8E <code>O(logN)</code></li><li>\u4E5F\u5C31\u662F\u8BF4\u6811\u4E2D\u7684<strong>\u6BCF\u4E2A\u8282\u70B9\u7684\u5DE6\u5B59\u5B50\u8282\u70B9\u7684\u4E2A\u6570</strong>, \u5E94\u8BE5\u5C3D\u53EF\u80FD\u7684\u7B49\u4E8E<strong>\u53F3\u8FB9\u7684\u5B50\u5B59\u5B50\u8282\u70B9\u7684\u4E2A\u6570</strong></li></ul><p>\u5E38\u89C1\u7684\u5E73\u8861\u6811\u6709\u54EA\u4E9B?</p><p><strong>AVL\u6811</strong>:</p><ul><li>AVL\u6811\u662F\u6700\u65E9\u7684\u4E00\u79CD\u5E73\u8861\u6811, \u4ED6\u6709\u4E9B\u529E\u6CD5\u4FDD\u6301 \u6811\u7684\u5E73\u8861(\u6BCF\u4E2A\u8282\u70B9\u591A\u5B58\u50A8\u4E86\u4E00\u4E2A\u989D\u5916\u7684\u6570\u636E)</li><li>\u56E0\u4E3A AVl\u6811\u662F<strong>\u5E73\u8861\u7684</strong>, \u6240\u4EE5\u4E8B\u4EF6\u590D\u6742\u5EA6\u4E5F\u662F <code>O(logN)</code></li><li>\u4F46\u662F, \u6BCF\u6B21\u63D2\u5165/\u5220\u9664\u64CD\u4F5C\u5BF9\u4E8E\u7EA2\u9ED1\u6811\u6548\u7387\u90FD\u4E0D\u9AD8, \u6240\u4EE5<strong>\u6574\u4F53\u6548\u7387\u4E0D\u5982\u7EA2\u9ED1\u6811</strong></li></ul><p><strong>\u7EA2\u9ED1\u6811</strong>:</p><ul><li>\u7EA2\u9ED1\u662F\u662F\u901A\u8FC7<strong>\u4E00\u4E9B\u7279\u6027</strong>\u6765\u4FDD\u6301\u6811\u7684\u5E73\u8861</li><li>\u56E0\u4E3A\u662F\u5E73\u8861\u6811, \u6240\u4EE5\u4E8B\u4EF6\u590D\u6742\u5EA6\u4E5F\u662F\u5728 <code>O(logN)</code></li><li>\u53E6\u5916\u63D2\u5165/\u5220\u9664\u7B49\u64CD\u4F5C, \u7EA2\u9ED1\u6811\u7684\u6027\u80FD\u8981\u7531\u4E8E AVL\u6811 , \u6240\u4EE5\u73B0\u5728\u5E73\u8861\u6811\u7684\u5E94\u7528\u57FA\u672C\u90FD\u662F\u7EA2\u9ED1\u6811</li></ul>',120);function B(O,S){return x}var P=s(_,[["render",B],["__file","start3.html.vue"]]);export{P as default};
